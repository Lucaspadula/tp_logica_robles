CREATE DATABASE TP_ROBLES
GO
USE TP_ROBLES
GO

SET DATEFORMAT DMY

CREATE TABLE ORIGEN_PRODUCTOS (
ID INT IDENTITY(1, 1),
NOMBRE VARCHAR(100) NOT NULL,
CONSTRAINT PK_ORIGEN_PRODUCTOS PRIMARY KEY (ID)
)

INSERT INTO ORIGEN_PRODUCTOS (NOMBRE)
				VALUES ('NACIONAL');
INSERT INTO ORIGEN_PRODUCTOS (NOMBRE)
				VALUES ('IMPORTADOS');
				
CREATE TABLE TIPOS_DOCUMENTOS (
ID INT IDENTITY(1,2) NOT NULL,
CODIGO VARCHAR(50) NOT NULL,
DESCRIPCION varchar(100) NOT NULL,
CONSTRAINT PK_TIPOS_DOCUMENTOS PRIMARY KEY (ID)
);

INSERT INTO TIPOS_DOCUMENTOS(CODIGO,DESCRIPCION)
VALUES						('DNI', 'Documento Nacional de Identidad')
INSERT INTO TIPOS_DOCUMENTOS(CODIGO,DESCRIPCION)
VALUES						('PAS', 'Pasaporte')
INSERT INTO TIPOS_DOCUMENTOS(CODIGO,DESCRIPCION)
VALUES						('LC', 'Licencia de Conducción')
INSERT INTO TIPOS_DOCUMENTOS(CODIGO,DESCRIPCION)
VALUES						('RC', 'Registro Civil')
INSERT INTO TIPOS_DOCUMENTOS(CODIGO,DESCRIPCION)
VALUES						('CE', 'Carné de Extranjería')
INSERT INTO TIPOS_DOCUMENTOS(CODIGO,DESCRIPCION)
VALUES						('NSS', 'Número de Seguro Social')
INSERT INTO TIPOS_DOCUMENTOS(CODIGO,DESCRIPCION)
VALUES						('PEP', 'Permiso Especial de Permanencia')
INSERT INTO TIPOS_DOCUMENTOS(CODIGO,DESCRIPCION)
VALUES						('TI', 'Tarjeta de Identidad (para menores)')
INSERT INTO TIPOS_DOCUMENTOS(CODIGO,DESCRIPCION)
VALUES						('CIP', 'Cédula de Identidad Personal')


CREATE TABLE PUESTOS(
ID INT IDENTITY(1,5),
PUESTOS VARCHAR(50) NOT NULL,
CONSTRAINT PK_PUESTOS PRIMARY KEY(ID)
)

INSERT INTO PUESTOS	(PUESTOS)
VALUES				('VENTA')
INSERT INTO PUESTOS	(PUESTOS)
VALUES				('COMPRA')
INSERT INTO PUESTOS	(PUESTOS)
VALUES				('DEPOSITO')
INSERT INTO PUESTOS	(PUESTOS)
VALUES				('ADMINISTRACION')
INSERT INTO PUESTOS	(PUESTOS)
VALUES				('LIMPIEZA')


CREATE TABLE SUB_CATEGORIAS(
ID INT IDENTITY(1,5),
DESCRIPCION_SUB_CATEGORIA VARCHAR(50) NOT NULL,
CONSTRAINT PK_SUB_CATEGORIA PRIMARY KEY(ID)
)

INSERT INTO SUB_CATEGORIAS(DESCRIPCION_SUB_CATEGORIA)
		VALUES('MUEBLES DE COMEDOR');
INSERT INTO SUB_CATEGORIAS(DESCRIPCION_SUB_CATEGORIA)
		VALUES('MUEBLES DE DORMITORIO');
INSERT INTO SUB_CATEGORIAS(DESCRIPCION_SUB_CATEGORIA)
		VALUES('MUEBLES DE OFICINA');
INSERT INTO SUB_CATEGORIAS(DESCRIPCION_SUB_CATEGORIA)
		VALUES('MUEBLES DE SALA DE ESTAR');
INSERT INTO SUB_CATEGORIAS(DESCRIPCION_SUB_CATEGORIA)
		VALUES('MUEBLES DE EXTERIOR');
INSERT INTO SUB_CATEGORIAS(DESCRIPCION_SUB_CATEGORIA)
		VALUES('MUEBLES DE BANIO');
INSERT INTO SUB_CATEGORIAS(DESCRIPCION_SUB_CATEGORIA)
		VALUES('MUEBLES DE COCINA');

		
CREATE TABLE TIPOS_CANALES(
ID INT IDENTITY(1,1),
TIPO_CANAL VARCHAR(50) NOT NULL,
CONSTRAINT PK_TIPO_CANALES PRIMARY KEY (ID)
)

INSERT INTO TIPOS_CANALES	(TIPO_CANAL)
		VALUES				('FISICO');
INSERT INTO TIPOS_CANALES(TIPO_CANAL)
		VALUES				('ONLINE');
		
CREATE TABLE CUOTAS(
ID INT IDENTITY (1,1),
CUOTA INT NOT NULL,
RECARGO DECIMAL,
CONSTRAINT PK_ID PRIMARY KEY (ID)
);

INSERT INTO CUOTAS	(CUOTA, RECARGO) 
VALUES				(1,		0.00);
INSERT INTO CUOTAS	(CUOTA, RECARGO) 
VALUES				(3,		10.00);
INSERT INTO CUOTAS	(CUOTA, RECARGO) 
VALUES				(6,		25.00);
INSERT INTO CUOTAS	(CUOTA, RECARGO) 
VALUES				(9,		40.00);
INSERT INTO CUOTAS	(CUOTA, RECARGO) 
VALUES				(12,	60.00);
INSERT INTO CUOTAS	(CUOTA, RECARGO) 
VALUES				(16,	80.00);
INSERT INTO CUOTAS	(CUOTA, RECARGO) 
VALUES				(18,	100.00);

CREATE TABLE PROVINCIAS (
ID INT IDENTITY(1,1),
PROVINCIA VARCHAR(50) NOT NULL,
CONSTRAINT PK_PROVINCIAS PRIMARY KEY (ID)
)

INSERT INTO PROVINCIAS	(PROVINCIA) 
VALUES					('BUENOS AIRES');
INSERT INTO PROVINCIAS	(PROVINCIA) 
VALUES					('CÓRDOBA');
INSERT INTO PROVINCIAS	(PROVINCIA) 
VALUES					('SANTA FE');
INSERT INTO PROVINCIAS	(PROVINCIA) 
VALUES					('ENTRE RÍOS');
INSERT INTO PROVINCIAS	(PROVINCIA) 
VALUES					('MISIONES');
INSERT INTO PROVINCIAS	(PROVINCIA) 
VALUES					('CORRIENTES');
INSERT INTO PROVINCIAS	(PROVINCIA) 
VALUES					('USHUAIA');
INSERT INTO PROVINCIAS	(PROVINCIA) 
VALUES					('MENDOZA');
INSERT INTO PROVINCIAS	(PROVINCIA) 
VALUES					('SALTA');
INSERT INTO PROVINCIAS	(PROVINCIA) 
VALUES					('LA RIOJA');


CREATE TABLE TIPOS_FRAGILIDAD(
ID INT IDENTITY(1,5),
TIPO_FRAGIL VARCHAR(50) NOT NULL,
CONSTRAINT PK_TIPOS_FRAGILIDAD PRIMARY KEY (ID)
)

INSERT INTO TIPOS_FRAGILIDAD(TIPO_FRAGIL)
					VALUES	('NO FRÁGIL');
INSERT INTO TIPOS_FRAGILIDAD(TIPO_FRAGIL)
					VALUES	('FRÁGIL');
INSERT INTO TIPOS_FRAGILIDAD(TIPO_FRAGIL)
					VALUES	('MUY FRÁGIL');


CREATE TABLE INSUMOS(
ID INT IDENTITY(1,1),
NOMBRE VARCHAR(100) NOT NULL,
DESCRIPCION VARCHAR(250),
UNIDAD_MEDIDAD VARCHAR(100) NOT NULL,
CANTIDAD DECIMAL(10,2),
PRECIO_UNITARIO DECIMAL(10,2),
CONSTRAINT PK_INSUMOS PRIMARY KEY (ID)
)

INSERT INTO INSUMOS(NOMBRE,							DESCRIPCION,								UNIDAD_MEDIDAD,		CANTIDAD,	PRECIO_UNITARIO)
			VALUES ('Tablero de pino',				'Tablero de pino macizo 1 x 12 x 8',		'Unidad',			50,			12500)
INSERT INTO INSUMOS(NOMBRE,							DESCRIPCION,								UNIDAD_MEDIDAD,		CANTIDAD,	PRECIO_UNITARIO)
			VALUES ('Tablero MDF 18mm',				'Tablero de fibra de densidad media 4 x 8', 'Plancha',			30,			22000)
INSERT INTO INSUMOS(NOMBRE,							DESCRIPCION,								UNIDAD_MEDIDAD,		CANTIDAD,	PRECIO_UNITARIO)
			VALUES ('Tablero melamina blanca',		'Melamina blanca 18mm 4 x 8',				'Plancha',			25,			28500)
INSERT INTO INSUMOS(NOMBRE,							DESCRIPCION,								UNIDAD_MEDIDAD,		CANTIDAD,	PRECIO_UNITARIO)
			VALUES ('Bisagra invisible 35mm',		'Bisagra para muebles de cocina cromada',	'Unidad',			500,		350)
INSERT INTO INSUMOS(NOMBRE,							DESCRIPCION,								UNIDAD_MEDIDAD,		CANTIDAD,	PRECIO_UNITARIO)
			VALUES ('Corredera telescópica 45cm',	'Corredera para cajones con cierre suave',	'Par',				200,		4200)
INSERT INTO INSUMOS(NOMBRE,							DESCRIPCION,								UNIDAD_MEDIDAD,		CANTIDAD,	PRECIO_UNITARIO)
			VALUES ('Tornillo para madera #8',		'Tornillo para madera cabeza plana 2"',		'Caja x 100',		50,			1800)

-- Adhesivos y acabados
INSERT INTO INSUMOS(NOMBRE,							DESCRIPCION,								UNIDAD_MEDIDAD,		CANTIDAD,	PRECIO_UNITARIO)
			VALUES ('Pegamento para madera',		'Adhesivo poliuretánico para ensamblaje',	'Litro',			20,			9500)
INSERT INTO INSUMOS(NOMBRE,							DESCRIPCION,								UNIDAD_MEDIDAD,		CANTIDAD,	PRECIO_UNITARIO)
			VALUES ('Barniz poliuretánico',			'Barniz protector satinado para interiores','Litro',			15,			12500)
INSERT INTO INSUMOS(NOMBRE,							DESCRIPCION,								UNIDAD_MEDIDAD,		CANTIDAD,	PRECIO_UNITARIO)
			VALUES ('Laca nitrocelulósica',			'Laca transparente en aerosol 400ml',		'Unidad',			60,			3200)

-- Tapicería
INSERT INTO INSUMOS(NOMBRE,							DESCRIPCION,								UNIDAD_MEDIDAD,		CANTIDAD,	PRECIO_UNITARIO)
			VALUES ('Espuma densidad media',		'Espuma para asientos 5cm de espesor',		'Plancha 2m x 1m',	10,			18500)
INSERT INTO INSUMOS(NOMBRE,							DESCRIPCION,								UNIDAD_MEDIDAD,		CANTIDAD,	PRECIO_UNITARIO)
			VALUES ('Tela tapicería beige',			'Tela resistente para muebles color beige', 'Metro',			150,		4500)
INSERT INTO INSUMOS(NOMBRE,							DESCRIPCION,								UNIDAD_MEDIDAD,		CANTIDAD,	PRECIO_UNITARIO)
			VALUES ('Hilo para tapicería',			'Hilo de poliéster resistente color natural','Carrete',			40,			2800)

-- Complementos
INSERT INTO INSUMOS(NOMBRE,							DESCRIPCION,								UNIDAD_MEDIDAD,		CANTIDAD,	PRECIO_UNITARIO)
			VALUES ('PATA NIVELADORA',				'PATA REGULABLE PARA MUEBLES DIAMETRO 18MM','UNIDAD',			300,		850)
INSERT INTO INSUMOS(NOMBRE,							DESCRIPCION,								UNIDAD_MEDIDAD,		CANTIDAD,	PRECIO_UNITARIO)
			VALUES ('TIRADOR MECANICO',				'TIRADOR CROMADO MODERNO 128MM',			'UNIDAD',			250,		1200)
INSERT INTO INSUMOS(NOMBRE,							DESCRIPCION,								UNIDAD_MEDIDAD,		CANTIDAD,	PRECIO_UNITARIO)
			VALUES ('LIJA GRANO 120',				'LIJA PARA MADERA DE GRANO MEDIO',			'HOJA',				200,		250)
	
CREATE TABLE ENTIDADES(
ID INT IDENTITY(1,1),
TIPO_ENTIDAD VARCHAR(20) NOT NULL,
CONSTRAINT PK_ENTIDADES PRIMARY KEY(ID)
);

INSERT INTO ENTIDADES	(TIPO_ENTIDAD)
VALUES					('CLIENTE')
INSERT INTO ENTIDADES	(TIPO_ENTIDAD)
VALUES					('PROVEEDOR')
INSERT INTO ENTIDADES	(TIPO_ENTIDAD)
VALUES					('EMPLEADO')

CREATE TABLE ESTADOS_ENTREGAS (
ID INT NOT NULL,
ESTADO_ENTREGA VARCHAR(20) NOT NULL,
DESCRIPCION VARCHAR(100) NULL,
ACTIVO INT NOT NULL,
CONSTRAINT FK_ESTADOS_ENTREGAS PRIMARY KEY (ID)
);

INSERT INTO ESTADOS_ENTREGAS	(ID, ESTADO_ENTREGA, DESCRIPCION,					ACTIVO) 
VALUES						( 1, 'ENTREGADO',	'Entrega exitosa y confirmada', 1);
INSERT INTO ESTADOS_ENTREGAS	(ID, ESTADO_ENTREGA, DESCRIPCION,						ACTIVO) 
VALUES						( 2, 'PENDIENTE',	'Envío asignado pero no procesado', 1 );
INSERT INTO ESTADOS_ENTREGAS	(ID, ESTADO_ENTREGA, DESCRIPCION,						ACTIVO) 
VALUES						( 3, 'CANCELADO',	'Pedido cancelado antes del envío',	1);
INSERT INTO ESTADOS_ENTREGAS	(ID, ESTADO_ENTREGA, DESCRIPCION,					ACTIVO) 
VALUES						( 4, 'EN_TRÁNSITO',	'En camino al destino',			1);
INSERT INTO ESTADOS_ENTREGAS	(ID, ESTADO_ENTREGA, DESCRIPCION,									ACTIVO) 
VALUES						( 5, 'FALLIDO',		'Intentado sin éxito.',							1);
INSERT INTO ESTADOS_ENTREGAS	(ID, ESTADO_ENTREGA, DESCRIPCION,					ACTIVO) 
VALUES						( 6, 'RECHAZADO',	'Cliente rechaZó el paquete',	1);
INSERT INTO ESTADOS_ENTREGAS	(ID, ESTADO_ENTREGA, DESCRIPCION,									ACTIVO) 
VALUES						( 7, 'DEVUELTO',	'Envío retornado al centro de distribución.',	1);
INSERT INTO ESTADOS_ENTREGAS	(ID, ESTADO_ENTREGA, DESCRIPCION,									ACTIVO) 
VALUES						( 8, 'REPROGRAMADO','Entrega pospuesta por solicitud',				1);
INSERT INTO ESTADOS_ENTREGAS	(ID, ESTADO_ENTREGA, DESCRIPCION,									ACTIVO) 
VALUES						( 9, 'EN_REVISIÓN', 'Problema detectado (embalaje dañado, etc.)',	1);
INSERT INTO ESTADOS_ENTREGAS	(ID, ESTADO_ENTREGA,	DESCRIPCION,								ACTIVO) 
VALUES						( 10, 'PENDIENTE_PAGO', 'Entrega retenida por pago pendiente',		1);


CREATE TABLE CONTACTOS(
ID INT IDENTITY(1,1),
ID_ENTIDAD INT NOT NULL,
CONTACTO VARCHAR(50) NOT NULL,
ID_TIPO_CANAL INT NOT NULL,
ES_PRINCIPAL BIT NOT NULL,
ACTIVO BIT NOT NULL,
FECHA_REGISTRO DATETIME2 NOT NULL,
CONSTRAINT PK_CONTACTOS PRIMARY KEY(ID),
CONSTRAINT FK_ID_TIPO_CANAL FOREIGN KEY(ID_TIPO_CANAL)
REFERENCES TIPOS_CANALES(ID),
CONSTRAINT FK_CONTACTOS_ENTIDADES FOREIGN KEY(ID_ENTIDAD) 
REFERENCES ENTIDADES(ID)
);

INSERT INTO CONTACTOS(ID_ENTIDAD,	CONTACTO,					ID_TIPO_CANAL,	ES_PRINCIPAL,	ACTIVO, FECHA_REGISTRO)
VALUES				 (1,			'FRANCOMOLINA@GMAIL.COM',	2,				1,				1,		'20-05-2023')
INSERT INTO CONTACTOS(ID_ENTIDAD,	CONTACTO,					ID_TIPO_CANAL,	ES_PRINCIPAL,	ACTIVO, FECHA_REGISTRO)
VALUES				 (3,			3515411605,					2,				2,				1,		'03-11-2021')
INSERT INTO CONTACTOS(ID_ENTIDAD,	CONTACTO,					ID_TIPO_CANAL,	ES_PRINCIPAL,	ACTIVO, FECHA_REGISTRO)
VALUES				 (2,			3515411605,					2,				1,				1,		'14-01-2022')
INSERT INTO CONTACTOS(ID_ENTIDAD,	CONTACTO,					ID_TIPO_CANAL,	ES_PRINCIPAL,	ACTIVO, FECHA_REGISTRO)
VALUES				 (3,			'GLORIAMARTINEZ@GMAIL.COM',	2,				2,				0,		'23-02-2021')
INSERT INTO CONTACTOS(ID_ENTIDAD,	CONTACTO,					ID_TIPO_CANAL,	ES_PRINCIPAL,	ACTIVO, FECHA_REGISTRO)
VALUES				 (1,			'RAULGOMEZ@GMAIL.COM',		2,				1,				1,		'11-09-2022')
INSERT INTO CONTACTOS(ID_ENTIDAD,	CONTACTO,					ID_TIPO_CANAL,	ES_PRINCIPAL,	ACTIVO, FECHA_REGISTRO)
VALUES				 (1,			'EUGETORRE@HOTMAIL.COM',	2,				1,				1,		'02-10-2024')
INSERT INTO CONTACTOS(ID_ENTIDAD,	CONTACTO,					ID_TIPO_CANAL,	ES_PRINCIPAL,	ACTIVO, FECHA_REGISTRO)
VALUES				 (2,			'FRAN_ROMERO@GMAIL.COM',	2,				2,				1,		'24-05-2025')
INSERT INTO CONTACTOS(ID_ENTIDAD,	CONTACTO,					ID_TIPO_CANAL,	ES_PRINCIPAL,	ACTIVO, FECHA_REGISTRO)
VALUES				 (3,			3515411325,					2,				1,				0,		'22-07-2022')
INSERT INTO CONTACTOS(ID_ENTIDAD,	CONTACTO,					ID_TIPO_CANAL,	ES_PRINCIPAL,	ACTIVO, FECHA_REGISTRO)
VALUES				 (1,			3515412345,					2,				2,				1,		'25-03-2023')
INSERT INTO CONTACTOS(ID_ENTIDAD,	CONTACTO,					ID_TIPO_CANAL,	ES_PRINCIPAL,	ACTIVO, FECHA_REGISTRO)
VALUES				 (1,			'LUCASGIMENEZ@GMAIL.COM',	2,				1,				1,		'10-04-2021')


CREATE TABLE CATEGORIAS(
ID INT IDENTITY(1,1),
NOMBRE VARCHAR(50) NOT NULL,
ID_SUB_CATEGORIA INT,
CONSTRAINT PK_CATEGORIA PRIMARY KEY(ID),
CONSTRAINT FK_ID_SUB_CATEGORIA FOREIGN KEY(ID_SUB_CATEGORIA)
REFERENCES SUB_CATEGORIAS(ID)
)

INSERT INTO CATEGORIAS(NOMBRE,				ID_SUB_CATEGORIA)
				VALUES('CAMA',				6);
INSERT INTO CATEGORIAS(NOMBRE,				ID_SUB_CATEGORIA) 
				VALUES('SOFÁ',				16);
INSERT INTO CATEGORIAS(NOMBRE,				ID_SUB_CATEGORIA) 
				VALUES('MESA DE COCINA',	1);
INSERT INTO CATEGORIAS(NOMBRE,				ID_SUB_CATEGORIA) 
				VALUES('LAVAMANOS',			31);
INSERT INTO CATEGORIAS(NOMBRE,				ID_SUB_CATEGORIA) 
				VALUES('ARMARIO',			6);
INSERT INTO CATEGORIAS(NOMBRE,				ID_SUB_CATEGORIA) 
				VALUES('SILLAS DE COMEDOR', 1);
INSERT INTO CATEGORIAS(NOMBRE,				ID_SUB_CATEGORIA) 
				VALUES('ESCRITORIO',		11);
INSERT INTO CATEGORIAS(NOMBRE,				ID_SUB_CATEGORIA) 
				VALUES('SILLAS DE JARDIN',	21);
INSERT INTO CATEGORIAS(NOMBRE,				ID_SUB_CATEGORIA) 
				VALUES('ALACENA',			1);
INSERT INTO CATEGORIAS(NOMBRE,				ID_SUB_CATEGORIA) 
				VALUES('MESA DE LUZ',		6);

CREATE TABLE BARRIOS (
ID INT IDENTITY(1,1),
BARRIO VARCHAR(50) NOT NULL,
ID_PROVINCIA INT NOT NULL,
CONSTRAINT PK_BARRIO PRIMARY KEY (ID),
CONSTRAINT FK_BARRIO_PROVINCIA FOREIGN KEY (ID_PROVINCIA) 
REFERENCES PROVINCIAS(ID)
);


INSERT INTO BARRIOS (BARRIO,				ID_PROVINCIA) 
			VALUES	('LA PLATA',			1);
INSERT INTO BARRIOS (BARRIO,				ID_PROVINCIA) 
			VALUES	('PALERMO',				1);
INSERT INTO BARRIOS (BARRIO,				ID_PROVINCIA) 
			VALUES	('GENERAL BELGRANO',	3);
INSERT INTO BARRIOS (BARRIO,				ID_PROVINCIA) 
			VALUES	('CERRO CORA',			5);
INSERT INTO BARRIOS (BARRIO,				ID_PROVINCIA) 
			VALUES	('RESIDENCIAL AMERICA', 2);
INSERT INTO BARRIOS (BARRIO,				ID_PROVINCIA) 
			VALUES	('YOFRE',				2);
INSERT INTO BARRIOS (BARRIO,				ID_PROVINCIA) 
			VALUES	('NUEVA CORDOBA',		2);
INSERT INTO BARRIOS (BARRIO,				ID_PROVINCIA) 
			VALUES	('PARANA',				4);
INSERT INTO BARRIOS (BARRIO,				ID_PROVINCIA) 
			VALUES	('LA ROSADA',			6);
INSERT INTO BARRIOS (BARRIO,				ID_PROVINCIA) 
			VALUES	('LOS CERROS',			10);


CREATE TABLE DIRECCIONES (
ID INT IDENTITY(1,1),
CALLE VARCHAR(50) NOT NULL,
NUMERO INT NOT NULL,
ID_BARRIO INT,
CONSTRAINT PK_DIRECCIONES PRIMARY KEY (ID),
CONSTRAINT FK_DIRECCIONES_BARRIOS FOREIGN KEY (ID_BARRIO)
REFERENCES BARRIOS (ID)
)

INSERT INTO DIRECCIONES (CALLE,			NUMERO, ID_BARRIO) 
				VALUES	('TEGUCIGALPA', 1355,	5);
INSERT INTO DIRECCIONES (CALLE,			NUMERO, ID_BARRIO) 
				VALUES	('NUEVA ORLEANS',989,	5);
INSERT INTO DIRECCIONES (CALLE,			NUMERO, ID_BARRIO) 
				VALUES	('PERU',		1750,	7);
INSERT INTO DIRECCIONES (CALLE,			NUMERO, ID_BARRIO) 
				VALUES	('FAVALORO',	1311,	1);
INSERT INTO DIRECCIONES (CALLE,			NUMERO, ID_BARRIO) 
				VALUES	('SABELLA',		1675,	1);
INSERT INTO DIRECCIONES (CALLE,			NUMERO, ID_BARRIO) 
				VALUES	('URQUIZA',		1430,	8);
INSERT INTO DIRECCIONES (CALLE,			NUMERO, ID_BARRIO) 
				VALUES	('AVELLANEDA',	1576,	1);
INSERT INTO DIRECCIONES (CALLE,			NUMERO, ID_BARRIO) 
				VALUES	('RIVADAVIA',	1246,	10);
INSERT INTO DIRECCIONES (CALLE,			NUMERO, ID_BARRIO) 
				VALUES	('PLUMERILLO',	1875,	10);
INSERT INTO DIRECCIONES (CALLE,			NUMERO, ID_BARRIO) 
				VALUES	('LOS LAPACHOS',1597,	4);
				
CREATE TABLE EMPRESAS_LOGISTICAS(
CUIT VARCHAR(100),
RAZON_SOCIAL VARCHAR(50) NOT NULL,
ID_DIRECCION INT NOT NULL,
ID_CONTACTO INT NOT NULL,
CONSTRAINT PK_EMPRESAS_LOGISTICAS PRIMARY KEY(CUIT),
CONSTRAINT FK_EMPRESAS_DIRECCIONES FOREIGN KEY (ID_DIRECCION) 
REFERENCES DIRECCIONES (ID),
CONSTRAINT FK_EMPRESAS_LOGISTICAS_CONTACTO FOREIGN KEY (ID_CONTACTO) 
REFERENCES CONTACTOS (ID)
);

INSERT INTO EMPRESAS_LOGISTICAS	(CUIT,				RAZON_SOCIAL,						ID_DIRECCION, ID_CONTACTO) 
						VALUES	('30-11223344-5',	'Correo Argentino',					1,				1)
INSERT INTO EMPRESAS_LOGISTICAS	(CUIT,				RAZON_SOCIAL,						ID_DIRECCION, ID_CONTACTO) 
						VALUES	('33-55667788-9',	'DistriRápido Argentina',			2,				2)
INSERT INTO EMPRESAS_LOGISTICAS	(CUIT,				RAZON_SOCIAL,						ID_DIRECCION, ID_CONTACTO) 
						VALUES	('30-99887766-1',	'Rápido Envío SA',					3,				3)
INSERT INTO EMPRESAS_LOGISTICAS	(CUIT,				RAZON_SOCIAL,						ID_DIRECCION, ID_CONTACTO) 
						VALUES	('34-44332211-3',	'Mensajería VeloZ Express',			4,				4)
INSERT INTO EMPRESAS_LOGISTICAS	(CUIT,				RAZON_SOCIAL,						ID_DIRECCION, ID_CONTACTO) 
						VALUES	('33-12345678-0',	'Distribuidora Logística Integral', 5,				5)
INSERT INTO EMPRESAS_LOGISTICAS	(CUIT,				RAZON_SOCIAL,						ID_DIRECCION, ID_CONTACTO) 
						VALUES	('30-87654321-2',	'CargoFácil Transportes',			6,				6)
INSERT INTO EMPRESAS_LOGISTICAS	(CUIT,				RAZON_SOCIAL,						ID_DIRECCION, ID_CONTACTO) 
						VALUES	('33-11223344-4',	'Envíos Seguros 24-7',				7,				7)
INSERT INTO EMPRESAS_LOGISTICAS	(CUIT,				RAZON_SOCIAL,						ID_DIRECCION, ID_CONTACTO) 
						VALUES	('30-55667788-6',	'Urbano Courier',					8,				8)
INSERT INTO EMPRESAS_LOGISTICAS	(CUIT,				RAZON_SOCIAL,						ID_DIRECCION, ID_CONTACTO) 
						VALUES	('34-99887766-8',	'FlashLogística',					9,				9)
INSERT INTO EMPRESAS_LOGISTICAS	(CUIT,				RAZON_SOCIAL,						ID_DIRECCION, ID_CONTACTO) 
						VALUES	('33-44332211-7',	'MotoMensajeros Express',			10,				10)

CREATE TABLE CONDUCTORES (
ID int NOT NULL,
NOMBRE varchar(100) NULL,
APELLIDO varchar(100) NULL,
TIPO_DOC int NULL,
NUM_DOC int NULL,
CUIT_EMPRESA_LOGISTICA varchar(100) NULL,
CONSTRAINT PK_CONDUCTORES PRIMARY KEY (ID),
CONSTRAINT FK_CONDUCTORES_EMPRESA_LOGISTICA FOREIGN KEY (CUIT_EMPRESA_LOGISTICA) 
REFERENCES EMPRESAS_LOGISTICAS(CUIT),
CONSTRAINT FK_CONDUCTORES_TIPOS_DOCUMENTOS FOREIGN KEY (TIPO_DOC) 
REFERENCES TIPOS_DOCUMENTOS(ID)
);


INSERT INTO CONDUCTORES ( ID,		NOMBRE,		APELLIDO,		TIPO_DOC,		NUM_DOC,	CUIT_EMPRESA_LOGISTICA) 
				VALUES  ( 1011,		'Sergio',	'Pérez',		1,				12345678,	'30-11223344-5');
INSERT INTO CONDUCTORES ( ID,		NOMBRE,		APELLIDO,		TIPO_DOC,		NUM_DOC,	CUIT_EMPRESA_LOGISTICA) 
				VALUES  ( 1055,		'Carlos',	'Sainz',		3,				23456789,	'33-55667788-9');
INSERT INTO CONDUCTORES ( ID,		NOMBRE,		APELLIDO,		TIPO_DOC,		NUM_DOC,	CUIT_EMPRESA_LOGISTICA) 
				VALUES  ( 1016,		'Charles',	'Leclerc',		3,				34567890,	'30-99887766-1');
INSERT INTO CONDUCTORES ( ID,		NOMBRE,		APELLIDO,		TIPO_DOC,		NUM_DOC,	CUIT_EMPRESA_LOGISTICA) 
				VALUES  ( 1081,		'Oscar',	'Piastri',		17,				45678901,	'30-99887766-1');
INSERT INTO CONDUCTORES ( ID,		NOMBRE,		APELLIDO,		TIPO_DOC,		NUM_DOC,	CUIT_EMPRESA_LOGISTICA) 
				VALUES  ( 1004,		'Lando',	'Norris',		17,				56789012,	'34-44332211-3');
INSERT INTO CONDUCTORES ( ID,		NOMBRE,		APELLIDO,		TIPO_DOC,		NUM_DOC,	CUIT_EMPRESA_LOGISTICA) 
				VALUES  ( 1044,		'Lewis',	'Hamilton',		7,				67890123,	'34-44332211-3');
INSERT INTO CONDUCTORES ( ID,		NOMBRE,		APELLIDO,		TIPO_DOC,		NUM_DOC,	CUIT_EMPRESA_LOGISTICA) 
				VALUES  ( 1063,		'George',	'Rusell',		7,				78901234,	'33-12345678-0')
INSERT INTO CONDUCTORES ( ID,		NOMBRE,		APELLIDO,		TIPO_DOC,		NUM_DOC,	CUIT_EMPRESA_LOGISTICA) 
				VALUES  ( 1033,		'Max',		'Verstappen',   1,				89012345,	'30-55667788-6');
INSERT INTO CONDUCTORES ( ID,		NOMBRE,		APELLIDO,		TIPO_DOC,		NUM_DOC,	CUIT_EMPRESA_LOGISTICA) 
				VALUES  ( 1014,		'Fernando', 'Alonso',       1,				90123456,	'30-55667788-6');
INSERT INTO CONDUCTORES ( ID,		NOMBRE,		APELLIDO,		TIPO_DOC,		NUM_DOC,	CUIT_EMPRESA_LOGISTICA) 
				VALUES  ( 1023,		'Alexander','Albon',		1,				01234567,	'30-55667788-6');

				
CREATE TABLE ROLES(
ID INT IDENTITY(1,2),
ROL VARCHAR(50) NOT NULL,
ID_PUESTO INT,
CONSTRAINT PK_ROLES PRIMARY KEY(ID),
CONSTRAINT FK_ROLES_PUESTOS FOREIGN KEY (ID_PUESTO) 
REFERENCES PUESTOS(ID)
);


INSERT INTO ROLES(ROL,							ID_PUESTO)
VALUES			 ('ENCARGADO DE COMPRAS',		6)
INSERT INTO ROLES(ROL,							ID_PUESTO)
VALUES			 ('CAJERO',						1)
INSERT INTO ROLES(ROL,							ID_PUESTO)
VALUES			 ('REPOSITOR',					11)
INSERT INTO ROLES(ROL,							ID_PUESTO)
VALUES			 ('ASESOR COMERCIAL',			1)
INSERT INTO ROLES(ROL,							ID_PUESTO)
VALUES			 ('GESTOR DE PROVEEDORES',		6)
INSERT INTO ROLES(ROL,							ID_PUESTO)
VALUES			 ('PREPARADOR DE PEDIDOS',		11)
INSERT INTO ROLES(ROL,							ID_PUESTO)
VALUES			 ('ENCARGADO LOGISTICA',		11)
INSERT INTO ROLES(ROL,							ID_PUESTO)
VALUES			 ('ASISTENTE ADMINISTRATIVO',	16)
INSERT INTO ROLES(ROL,							ID_PUESTO)
VALUES			 ('CONTADOR',					16)
INSERT INTO ROLES(ROL,							ID_PUESTO)
VALUES			 ('RESPONSABLE RRHH',			16)
INSERT INTO ROLES(ROL,							ID_PUESTO)
VALUES			 ('AUXILIAR DE MANTENIMIENTO',	21)

CREATE TABLE GALPONES (
NRO_GALPON INT IDENTITY(1,1),
DESCRIPCION VARCHAR(150),
CAPACIDAD INT NOT NULL,
HABILITADO BIT NOT NULL,
ID_DIRECCIONES INT,
CONSTRAINT PK_GALPONES PRIMARY KEY (NRO_GALPON),
CONSTRAINT FK_GALPONES_DIRECCIONES FOREIGN KEY (ID_DIRECCIONES)
REFERENCES DIRECCIONES (ID)
)


INSERT INTO GALPONES(DESCRIPCION,				CAPACIDAD,	HABILITADO, ID_DIRECCIONES) 
			VALUES	('',						500,		1,			1);
INSERT INTO GALPONES(DESCRIPCION,				CAPACIDAD,	HABILITADO,	ID_DIRECCIONES) 
			VALUES	('',						700,		0,			2);
INSERT INTO GALPONES(DESCRIPCION,				CAPACIDAD,	HABILITADO, ID_DIRECCIONES) 
			VALUES	('Nuevo establecimiento',	450,		1,			3);
INSERT INTO GALPONES(DESCRIPCION,				CAPACIDAD,	HABILITADO, ID_DIRECCIONES) 
			VALUES	('Clausurado',				600,		0,			4);
INSERT INTO GALPONES(DESCRIPCION,				CAPACIDAD,	HABILITADO,	ID_DIRECCIONES) 
			VALUES	('',						200,		1,			5);
INSERT INTO GALPONES(DESCRIPCION,				CAPACIDAD,	HABILITADO, ID_DIRECCIONES) 
			VALUES	('',						100,		0,			6);
INSERT INTO GALPONES(DESCRIPCION,				CAPACIDAD,	HABILITADO, ID_DIRECCIONES) 
			VALUES	('Galpon de puerta roja',	300,		1,			7);
INSERT INTO GALPONES(DESCRIPCION,				CAPACIDAD,	HABILITADO, ID_DIRECCIONES) 
			VALUES	('',						400,		0,			8);
INSERT INTO GALPONES(DESCRIPCION,				CAPACIDAD,	HABILITADO,	ID_DIRECCIONES) 
			VALUES	('Galpon principal',		700,		1,			9);
INSERT INTO GALPONES(DESCRIPCION,				CAPACIDAD,	HABILITADO, ID_DIRECCIONES) 
			VALUES	('Clausurado',				150,		0,			10);

			
CREATE TABLE SUCURSALES (
NRO_SUCURSAL INT IDENTITY(1,1),
DESCRIPCION VARCHAR(150),
ID_DIRECCIONES INT NOT NULL,
ID_NRO_GALPON INT NOT NULL,
CONSTRAINT PK_SUCURSALES PRIMARY KEY (NRO_SUCURSAL),
CONSTRAINT FK_SUCURSALES_DIRECCIONES FOREIGN KEY (ID_DIRECCIONES)
REFERENCES DIRECCIONES (ID),
CONSTRAINT FK_SUCURSALES_GALPONES FOREIGN KEY (ID_NRO_GALPON)
REFERENCES GALPONES (NRO_GALPON),
)


INSERT INTO SUCURSALES	(DESCRIPCION,												ID_DIRECCIONES, ID_NRO_GALPON)
				VALUES	('Abre de 9 a 18hs',										1,				1);
INSERT INTO SUCURSALES	(DESCRIPCION,												ID_DIRECCIONES, ID_NRO_GALPON)
				VALUES	('No se realizan envíos los días feriados y fin de semana', 2,				2);
INSERT INTO SUCURSALES	(DESCRIPCION,												ID_DIRECCIONES, ID_NRO_GALPON)
				VALUES	('',														3,				3);
INSERT INTO SUCURSALES	(DESCRIPCION,												ID_DIRECCIONES, ID_NRO_GALPON)
				VALUES	('',														4,				4);
INSERT INTO SUCURSALES	(DESCRIPCION,												ID_DIRECCIONES, ID_NRO_GALPON)
				VALUES	('',														5,				5);
INSERT INTO SUCURSALES	(DESCRIPCION,												ID_DIRECCIONES, ID_NRO_GALPON)
				VALUES	('Los dias lunes abre a las 8',								6,				6);
INSERT INTO SUCURSALES	(DESCRIPCION,												ID_DIRECCIONES, ID_NRO_GALPON)
				VALUES	('No acepta devoluciones los jueves y viernes',				7,				7);
INSERT INTO SUCURSALES	(DESCRIPCION,												ID_DIRECCIONES, ID_NRO_GALPON)
				VALUES	('Abre de 8 a 19 hs',										8,				8);
INSERT INTO SUCURSALES	(DESCRIPCION,												ID_DIRECCIONES, ID_NRO_GALPON)
				VALUES	('Los domingo esta cerrado',								9,				9);
INSERT INTO SUCURSALES	(DESCRIPCION,												ID_DIRECCIONES, ID_NRO_GALPON)
				VALUES	('',														10,				10);

			
CREATE TABLE PRODUCTOS (
ID INT IDENTITY(1,1) ,
NOMBRE VARCHAR(50) NOT NULL,
PRECIO_UNITARIO INT NOT NULL,
DESCRIPCION VARCHAR(100),
ID_CATEGORIA INT,
ID_ORIGEN INT NOT NULL,
CONSTRAINT PK_PRODUCTOS PRIMARY KEY (ID),
CONSTRAINT FK_PRODUCTOS_CATEGORIA FOREIGN KEY (ID_CATEGORIA) 
REFERENCES CATEGORIAS(ID),
CONSTRAINT FK_PRODUCTOS_ORIGEN FOREIGN KEY (ID_ORIGEN) 
REFERENCES ORIGEN_PRODUCTOS(ID)
);


INSERT INTO PRODUCTOS	(NOMBRE,					PRECIO_UNITARIO,	DESCRIPCION,										ID_CATEGORIA,	ID_ORIGEN)
VALUES					('Silla de Comedor',		10000,				'Silla de madera maciza, terminación roble',		1,				1)
INSERT INTO PRODUCTOS	(NOMBRE,					PRECIO_UNITARIO,	DESCRIPCION,										ID_CATEGORIA,	ID_ORIGEN)
VALUES					('Mesa Extensible',			30000,				'Mesa comedor extensible para 8 personas',			2,				1)
INSERT INTO PRODUCTOS	(NOMBRE,					PRECIO_UNITARIO,	DESCRIPCION,										ID_CATEGORIA,	ID_ORIGEN)
VALUES					('Sillón 2 cuerpos',		45000,				'Tapizado en tela lino importado',					3,				2)
INSERT INTO PRODUCTOS	(NOMBRE,					PRECIO_UNITARIO,	DESCRIPCION,										ID_CATEGORIA,	ID_ORIGEN)
VALUES					('Estantería Modular',		18000,				'Módulos de melamina blanca',						4,				1)
INSERT INTO PRODUCTOS	(NOMBRE,					PRECIO_UNITARIO,	DESCRIPCION,										ID_CATEGORIA,	ID_ORIGEN)
VALUES					('Mesa Ratona',				12000,				'Mesa baja de centro, estilo nórdico',				5,				2)
INSERT INTO PRODUCTOS	(NOMBRE,					PRECIO_UNITARIO,	DESCRIPCION,										ID_CATEGORIA,	ID_ORIGEN)
VALUES					('Cómoda de 6 cajones',		28000,				'Cómoda blanca con correderas metálicas',			6,				1)
INSERT INTO PRODUCTOS	(NOMBRE,					PRECIO_UNITARIO,	DESCRIPCION,										ID_CATEGORIA,	ID_ORIGEN)
VALUES					('Cama Matrimonial',		60000,				'Estructura de pino reforzada, sommier no incluido',7,				2)
INSERT INTO PRODUCTOS	(NOMBRE,					PRECIO_UNITARIO,	DESCRIPCION,										ID_CATEGORIA,	ID_ORIGEN)
VALUES					('Biblioteca Alta',			22000,				'Biblioteca 5 estantes',							8,				1)
INSERT INTO PRODUCTOS	(NOMBRE,					PRECIO_UNITARIO,	DESCRIPCION,										ID_CATEGORIA,	ID_ORIGEN)
VALUES					('Escritorio Ejecutivo',	35000,				'Con bandeja de teclado y cajonera',				9,				2)
INSERT INTO PRODUCTOS	(NOMBRE,					PRECIO_UNITARIO,	DESCRIPCION,										ID_CATEGORIA,	ID_ORIGEN)
VALUES					('Silla Oficina Ergonómica',25000,				'Respaldo regulable, ruedas giratorias',			10,				2);


CREATE TABLE STOCKS (
ID INT IDENTITY(1,1),
DESCRIPCION VARCHAR(150),
LOTE INT NOT NULL,
CANTIDAD_INICIAL INT NOT NULL,
VARIACION_STOCK INT NOT NULL,
ID_SUCURSAL INT,
ID_PRODUCTO INT,
CONSTRAINT PK_STOCKS PRIMARY KEY (ID),
CONSTRAINT FK_STOCKS_SUCURSALES FOREIGN KEY (ID_SUCURSAL)
REFERENCES SUCURSALES (NRO_SUCURSAL),
CONSTRAINT FK_STOCKS_PRODUCTOS FOREIGN KEY (ID_PRODUCTO)
REFERENCES PRODUCTOS (ID)
);


INSERT INTO STOCKS (DESCRIPCION,	LOTE,	CANTIDAD_INICIAL,	VARIACION_STOCK, ID_SUCURSAL, ID_PRODUCTO) 
			VALUES ('STOCK 1',		1111,	100,				500,			 1,			  1)
INSERT INTO STOCKS (DESCRIPCION,	LOTE,	CANTIDAD_INICIAL,	VARIACION_STOCK, ID_SUCURSAL, ID_PRODUCTO) 
			VALUES ('STOCK 2',		2222,	300,				0,				 2, 		  2)
INSERT INTO STOCKS (DESCRIPCION,	LOTE,	CANTIDAD_INICIAL,	VARIACION_STOCK, ID_SUCURSAL, ID_PRODUCTO) 
			VALUES ('STOCK 3',		3333,	500,				-200,			 3,			  3)
INSERT INTO STOCKS (DESCRIPCION,	LOTE,	CANTIDAD_INICIAL,	VARIACION_STOCK, ID_SUCURSAL, ID_PRODUCTO) 
			VALUES ('STOCK 4',		4444,	700,				1500,			 4,			  4)
INSERT INTO STOCKS (DESCRIPCION,	LOTE,	CANTIDAD_INICIAL,	VARIACION_STOCK, ID_SUCURSAL, ID_PRODUCTO) 
			VALUES ('STOCK 5',		5555,	900,				-500,			 5,			  5)
INSERT INTO STOCKS (DESCRIPCION,	LOTE,	CANTIDAD_INICIAL,	VARIACION_STOCK, ID_SUCURSAL, ID_PRODUCTO) 
			VALUES ('STOCK 6',		6666,	1100,				90,				 6,			  6)
INSERT INTO STOCKS (DESCRIPCION,	LOTE,	CANTIDAD_INICIAL,	VARIACION_STOCK, ID_SUCURSAL, ID_PRODUCTO) 
			VALUES ('STOCK 7',		7777,	1300,				-500,			 7,			  7)
INSERT INTO STOCKS (DESCRIPCION,	LOTE,	CANTIDAD_INICIAL,	VARIACION_STOCK, ID_SUCURSAL, ID_PRODUCTO) 
			VALUES ('STOCK 8',		8888,	1500,				3500,			 8,			  8)
INSERT INTO STOCKS (DESCRIPCION,	LOTE,	CANTIDAD_INICIAL,	VARIACION_STOCK, ID_SUCURSAL, ID_PRODUCTO) 
			VALUES ('STOCK 9',		9999,	1700,				0 ,				 9,			  9)
INSERT INTO STOCKS (DESCRIPCION,	LOTE,	CANTIDAD_INICIAL,	VARIACION_STOCK, ID_SUCURSAL, ID_PRODUCTO) 
			VALUES ('STOCK 10',		1010,	1900,				40,				 10,		  10 );

			
CREATE TABLE FORMAS_PAGOS (
ID INT,
FORMA_PAGO VARCHAR (50) NOT NULL,
ID_CUOTA INT,
CONSTRAINT PK_FORMAS_PAGOS PRIMARY KEY (ID),
CONSTRAINT FK_FORMAS_PAGOS_CUOTA FOREIGN KEY (ID_CUOTA)
REFERENCES CUOTAS (ID)
);
INSERT INTO FORMAS_PAGOS(ID,	FORMA_PAGO,					ID_CUOTA) 
				VALUES	(1,		'EFECTIVO',					NULL);
INSERT INTO FORMAS_PAGOS(ID,	FORMA_PAGO,					ID_CUOTA) 
				VALUES	(2,		'DEBITO BANCO GALICIA',		NULL);
INSERT INTO FORMAS_PAGOS(ID,	FORMA_PAGO,					ID_CUOTA) 
				VALUES	(3,		'DEBITO BANCO BBVV',		NULL);
INSERT INTO FORMAS_PAGOS(ID,	FORMA_PAGO,					ID_CUOTA) 
				VALUES	(4,		'CREDITO BANCOR',			6);
INSERT INTO FORMAS_PAGOS(ID,	FORMA_PAGO,					ID_CUOTA) 
				VALUES	(5,	'CREDITO BANCO SANTANDER',	3);
INSERT INTO FORMAS_PAGOS(ID,	FORMA_PAGO,					ID_CUOTA) 
				VALUES	(6,		'MERCADO PAGO',				NULL);
INSERT INTO FORMAS_PAGOS(ID,	FORMA_PAGO,					ID_CUOTA) 
				VALUES	(7,		'CREDITO BANCO GALICIA',	2);
INSERT INTO FORMAS_PAGOS(ID,	FORMA_PAGO,					ID_CUOTA) 
				VALUES	(8,		'CREDITO BANCO SANTANDER',	7);
INSERT INTO FORMAS_PAGOS(ID,	FORMA_PAGO,					ID_CUOTA) 
				VALUES	(9,		'CREDITO BANCO BBVV',		5);
INSERT INTO FORMAS_PAGOS(ID,	FORMA_PAGO,					ID_CUOTA) 
				VALUES	(10,		'UALA',						NULL);
INSERT INTO FORMAS_PAGOS(ID,	FORMA_PAGO,					ID_CUOTA) 
				VALUES	(11,	'NARANJA X',				NULL);


				
CREATE TABLE VEHICULOS(
ID INT IDENTITY(1,1),
MARCA VARCHAR(100) NOT NULL,
MODELO VARCHAR(100) NOT NULL,
COLOR VARCHAR(100) NOT NULL,
PATENTE VARCHAR(100) NOT NULL,
CONSTRAINT PK_VEHICULOS PRIMARY KEY (id)
);


INSERT INTO VEHICULOS	(MARCA,		MODELO,			COLOR,		PATENTE) 
				VALUES	('CITROEN', 'BERLINGO',		'GRIS',		'AC 100 BD');
INSERT INTO VEHICULOS	(MARCA,		MODELO,			COLOR,		PATENTE) 
				VALUES	('CHANGAN', 'MD201',		'BLANCO',	'AG 333 ZI');
INSERT INTO VEHICULOS	(MARCA,		MODELO,			COLOR,		PATENTE) 
				VALUES	('IVECO',	'C35',			'NEGRO',	'AB 267 JF');
INSERT INTO VEHICULOS	(MARCA,		MODELO,			COLOR,		PATENTE) 
				VALUES	('FIAT',	'FIORINO',		'ROJO',		'AF 002 KD');
INSERT INTO VEHICULOS	(MARCA,		MODELO,			COLOR,		PATENTE) 
				VALUES	('PEUGEOT', 'PARTNER',		'AZUL',		'AA 129 XJ');
INSERT INTO VEHICULOS	(MARCA,		MODELO,			COLOR,		PATENTE) 
				VALUES	('RENAULT', 'KANGOO',		'NARANJA',	'AE 460 FL');
INSERT INTO VEHICULOS	(MARCA,		MODELO,			COLOR,		PATENTE) 
				VALUES	('IVECO',	'X30 FURGON',	'GRIS',		'AF 781 VV');
INSERT INTO VEHICULOS	(MARCA,		MODELO,			COLOR,		PATENTE) 
				VALUES	('PEUGEOT', 'EXPERT',		'NEGRO',	'AH 558 PY');
INSERT INTO VEHICULOS	(MARCA,		MODELO,			COLOR,		PATENTE) 
				VALUES	('FIAT',	'ACTIS BOX',	'GRIS',		'AB 387 KG');
INSERT INTO VEHICULOS	(MARCA,		MODELO,			COLOR,		PATENTE) 
				VALUES	('MERCEDES','SPRINTER',		'BLANCO',	'AA 815 HZ');

				
CREATE TABLE CONDUCTORES_VEHICULOS (
ID INT NOT NULL,
ID_CONDUCTOR int NOT NULL,
ID_VEHICULO int NOT NULL,
FECHA_ASIGNACION date NOT NULL,
CONSTRAINT PK_CONDUCTORES_VEHICULOS PRIMARY KEY (ID),
CONSTRAINT FK_CONDUCTORES_VEHICULOS_CONDUCTORES FOREIGN KEY (ID_CONDUCTOR) 
REFERENCES CONDUCTORES(ID),
CONSTRAINT FK_CONDUCTORES_VEHICULOS_VEHICULO FOREIGN KEY (ID_VEHICULO) 
REFERENCES VEHICULOS(ID)
);


INSERT INTO CONDUCTORES_VEHICULOS (ID,	ID_CONDUCTOR,	ID_VEHICULO,	FECHA_ASIGNACION) 
							VALUES(1,	1011,			1,				'2024-01-14')
INSERT INTO CONDUCTORES_VEHICULOS (ID,	ID_CONDUCTOR,	ID_VEHICULO,	FECHA_ASIGNACION) 
							VALUES(2,	1055,			2,				'2023-05-11')
INSERT INTO CONDUCTORES_VEHICULOS (ID,	ID_CONDUCTOR,	ID_VEHICULO,	FECHA_ASIGNACION) 
							VALUES(3,	1016,			3,				'2025-05-24')
INSERT INTO CONDUCTORES_VEHICULOS (ID,	ID_CONDUCTOR,	ID_VEHICULO,	FECHA_ASIGNACION) 
							VALUES(4,	1081,			4,				'2025-01-24')
INSERT INTO CONDUCTORES_VEHICULOS (ID,	ID_CONDUCTOR,	ID_VEHICULO,	FECHA_ASIGNACION) 
							VALUES(5,	1004,			5,				'2025-01-03')
INSERT INTO CONDUCTORES_VEHICULOS (ID,	ID_CONDUCTOR,	ID_VEHICULO,	FECHA_ASIGNACION) 
							VALUES(6,	1044,			6,				'2025-04-16')
INSERT INTO CONDUCTORES_VEHICULOS (ID,	ID_CONDUCTOR,	ID_VEHICULO,	FECHA_ASIGNACION) 
							VALUES(7,	1063,			7,				'2025-05-24')
INSERT INTO CONDUCTORES_VEHICULOS (ID,	ID_CONDUCTOR,	ID_VEHICULO,	FECHA_ASIGNACION) 
							VALUES(8,	1033,			8,				'2025-03-24')
INSERT INTO CONDUCTORES_VEHICULOS (ID,	ID_CONDUCTOR,	ID_VEHICULO,	FECHA_ASIGNACION) 
							VALUES(9,	1014,			9,				'2025-02-14')
INSERT INTO CONDUCTORES_VEHICULOS (ID,	ID_CONDUCTOR,	ID_VEHICULO,	FECHA_ASIGNACION) 
							VALUES(10,	1023,			10,				'2024-01-25');

CREATE TABLE EMPLEADOS(
LEGAJO INT,
NOMBRE VARCHAR(50) NOT NULL,
APELLIDO VARCHAR(50) NOT NULL,
TIPO_DOC INT,
NUM_DOC INT,
FEC_NAC DATETIME2,
FEC_INGRESO DATETIME2,
ID_ROL INT,
ID_DIRECCION INT,
ID_SUCURSAL INT,
CONSTRAINT PK_EMPLEADOS PRIMARY KEY(LEGAJO),
CONSTRAINT FK_EMPLEADOS_ROLES FOREIGN KEY(ID_ROL) 
REFERENCES ROLES(ID),
CONSTRAINT FK_EMPLEADOS_DIRECCIONES FOREIGN KEY(ID_DIRECCION) 
REFERENCES DIRECCIONES(ID),
CONSTRAINT FK_EMPLEADOS_SUCURSALES FOREIGN KEY(ID_SUCURSAL) 
REFERENCES SUCURSALES(NRO_SUCURSAL),
CONSTRAINT FK_EMPLEADOS_TIPOS_DOCUMENTOS FOREIGN KEY(TIPO_DOC) 
REFERENCES TIPOS_DOCUMENTOS(ID),
);


INSERT INTO EMPLEADOS	(LEGAJO,	NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		FEC_INGRESO, ID_ROL, ID_DIRECCION, ID_SUCURSAL) 
				VALUES	(2023001,	'Carlos',	'Gómez',	1,			'30123456', '1980-05-15',	'2015-03-10', 1,		1,			1)
INSERT INTO EMPLEADOS	(LEGAJO,	NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		FEC_INGRESO, ID_ROL, ID_DIRECCION, ID_SUCURSAL) 
				VALUES	(2021002,	'María',	'López',	3,			'27894561', '1985-08-22',	'2018-06-15', 3,		2,			2)
INSERT INTO EMPLEADOS	(LEGAJO,	NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		FEC_INGRESO, ID_ROL, ID_DIRECCION, ID_SUCURSAL) 
				VALUES	(2024003,	'Juan',		'Martínez', 3,			'33567890', '1978-11-30',	'2019-01-20', 5,		3,			3)
INSERT INTO EMPLEADOS	(LEGAJO,	NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		FEC_INGRESO, ID_ROL, ID_DIRECCION, ID_SUCURSAL) 
				VALUES	(2023004,	'Lucía',	'Fernández',1,			'40234567', '1995-04-12',	'2023-02-01', 5,		4,			4)
INSERT INTO EMPLEADOS	(LEGAJO,	NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		FEC_INGRESO, ID_ROL, ID_DIRECCION, ID_SUCURSAL) 
				VALUES	(2025005,	'Roberto',	'Díaz',		13,			'28901234', '1987-07-08',	'2020-09-05', 7,		5,			2)
INSERT INTO EMPLEADOS	(LEGAJO,	NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		FEC_INGRESO, ID_ROL, ID_DIRECCION, ID_SUCURSAL) 
				VALUES	(2023006,	'Ana',		'Sánchez',	1,			'35456789', '1990-02-25',	'2021-04-12', 9,		6,			1)
INSERT INTO EMPLEADOS	(LEGAJO,	NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		FEC_INGRESO, ID_ROL, ID_DIRECCION, ID_SUCURSAL) 
				VALUES	(2020007,	'Pedro',	'Romero',	5,			'32678901', '1983-10-18',	'2022-03-15', 5,		7,			6)
INSERT INTO EMPLEADOS	(LEGAJO,	NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		FEC_INGRESO, ID_ROL, ID_DIRECCION, ID_SUCURSAL) 
				VALUES	(2019008,	'Laura',	'García',	3,			'36789012', '1982-12-05',	'2016-08-22', 3,		8,			7)
INSERT INTO EMPLEADOS	(LEGAJO,	NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		FEC_INGRESO, ID_ROL, ID_DIRECCION, ID_SUCURSAL) 
				VALUES	(2018009,	'Diego',	'Pérez',	1,			'41345678', '1993-06-20',	'2023-05-10', 5,		9,			9)

				
CREATE TABLE CLIENTES (
NRO_CLIENTE INT IDENTITY(1,1),
NOMBRE VARCHAR(50) NOT NULL,
APELLIDO VARCHAR(50) NOT NULL,
TIPO_DOC INT NOT NULL ,
NUM_DOC INT,
FEC_NAC DATE,
ID_DIRECCION INT,
ID_CONTACTO INT NOT NULL,
CONSTRAINT PK_CLIENTES PRIMARY KEY (NRO_CLIENTE),
CONSTRAINT FK_DIRECCION FOREIGN KEY (ID_DIRECCION)
REFERENCES DIRECCIONES (ID),
CONSTRAINT FK_CONTACTO FOREIGN KEY (ID_CONTACTO) 
REFERENCES CONTACTOS (ID),
CONSTRAINT FK_TIPO_CONTACTO FOREIGN KEY (TIPO_DOC) 
REFERENCES TIPOS_DOCUMENTOS (ID)
);


INSERT INTO CLIENTES(NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		ID_DIRECCION,	ID_CONTACTO)
			VALUES	('MATIAS',		'DUARTE',	1 ,			35054004,	'21-02-1990',	1 ,				1)
INSERT INTO CLIENTES(NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		ID_DIRECCION,	ID_CONTACTO)
			VALUES	('LUCAS',		'PADULA',	1 ,			38456123,	'12-07-1998',	2 ,				1)
INSERT INTO CLIENTES(NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		ID_DIRECCION,	ID_CONTACTO)
			VALUES	('CINTIA',		'CARIDDI',	1 ,			43875943,	'15-04-2000',	3 ,				1)
INSERT INTO CLIENTES(NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		ID_DIRECCION,	ID_CONTACTO)
			VALUES	('NOLIS',		'MALDONADO',1 ,			33619830,	'04-02-1984',	4 ,				1)
INSERT INTO CLIENTES(NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		ID_DIRECCION,	ID_CONTACTO)
			VALUES	('FACUNDO',		'BALLS',	1 ,			38809341,	'21-11-1998',	5 ,				1)
INSERT INTO CLIENTES(NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		ID_DIRECCION,	ID_CONTACTO)
			VALUES	('MATIAS',		'GLOWACKI', 1 ,			40666980,	'11-12-1999',	6 ,				1)
INSERT INTO CLIENTES(NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		ID_DIRECCION,	ID_CONTACTO)
			VALUES	('MICAELA',		'BINI',		1 ,			42004775,	'01-05-2000',	5 ,				1)
INSERT INTO CLIENTES(NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		ID_DIRECCION,	ID_CONTACTO)
			VALUES	('MARCELO',		'CORREA',	1 ,			32546000,	'11-02-1982',	8 ,				1)
INSERT INTO CLIENTES(NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		ID_DIRECCION,	ID_CONTACTO)
			VALUES	('FERNANDA',	'MAESTRI',	1 ,			10234678,	'17-01-1954',	9 ,				1)
INSERT INTO CLIENTES(NOMBRE,		APELLIDO,	TIPO_DOC,	NUM_DOC,	FEC_NAC,		ID_DIRECCION,	ID_CONTACTO)
			VALUES	('PABLO',		'CARBONE',	1 ,			13538471,	'19-09-1958',	2 ,			1);

CREATE TABLE CANALES_DE_ATENCION (
ID INT IDENTITY(1,5),
ID_TIPO_CANAL INT NOT NULL,
DESCRIPCION_CANAL VARCHAR(100),
FECHA_HORA DATETIME,
ID_CLIENTE INT NOT NULL,
ID_EMPLEADO INT NOT NULL,
OBSERVACION VARCHAR(500),
CONSTRAINT PK_CANALES_DE_ATENCION PRIMARY KEY (ID),
CONSTRAINT FK_CANALES_DE_ATENCION_TIPOS_CANALES FOREIGN KEY (ID_TIPO_CANAL) 
REFERENCES TIPOS_CANALES(ID),
CONSTRAINT FK_CANALES_DE_ATENCION_CLIENTES FOREIGN KEY (ID_CLIENTE) 
REFERENCES CLIENTES(NRO_CLIENTE),
CONSTRAINT FK_CANALES_DE_ATENCION_EMPLEADOS FOREIGN KEY (ID_EMPLEADO) 
REFERENCES EMPLEADOS(LEGAJO)
);


INSERT INTO CANALES_DE_ATENCION	(ID_TIPO_CANAL, DESCRIPCION_CANAL,	FECHA_HORA,		ID_CLIENTE, ID_EMPLEADO,	OBSERVACION)
VALUES							(1,				'PRESENCIAL',		'12-05-2023',	1,			2019008,				'CONSULTA')
INSERT INTO CANALES_DE_ATENCION	(ID_TIPO_CANAL, DESCRIPCION_CANAL,	FECHA_HORA,		ID_CLIENTE, ID_EMPLEADO,	OBSERVACION)
VALUES							(2,				'PAGINA WEB',		'12-05-2023',	1,			2019008,				'VENTA')
INSERT INTO CANALES_DE_ATENCION	(ID_TIPO_CANAL, DESCRIPCION_CANAL,	FECHA_HORA,		ID_CLIENTE, ID_EMPLEADO,	OBSERVACION)
VALUES							(2,				'INSTAGRAM',		'12-05-2023',	1,			2025005,				'VENTA')
INSERT INTO CANALES_DE_ATENCION	(ID_TIPO_CANAL, DESCRIPCION_CANAL,	FECHA_HORA,		ID_CLIENTE, ID_EMPLEADO,	OBSERVACION)
VALUES							(2,				'FACEBOOK',			'12-05-2023',	1,			2021002,				'CONSULTA')
INSERT INTO CANALES_DE_ATENCION	(ID_TIPO_CANAL, DESCRIPCION_CANAL,	FECHA_HORA,		ID_CLIENTE, ID_EMPLEADO,	OBSERVACION)
VALUES							(2,				'PAGINA WEB',		'12-05-2023',	1,			2019008,				'CONSULTA')
INSERT INTO CANALES_DE_ATENCION	(ID_TIPO_CANAL, DESCRIPCION_CANAL,	FECHA_HORA,		ID_CLIENTE, ID_EMPLEADO,	OBSERVACION)
VALUES							(1,				'PRESENCIAL',		'12-05-2023',	1,			2025005,				'VENTA')
INSERT INTO CANALES_DE_ATENCION	(ID_TIPO_CANAL, DESCRIPCION_CANAL,	FECHA_HORA,		ID_CLIENTE, ID_EMPLEADO,	OBSERVACION)
VALUES							(2,				'PAGINA WEB',		'12-05-2023',	1,			2021002,				'CONSULTA')
INSERT INTO CANALES_DE_ATENCION	(ID_TIPO_CANAL, DESCRIPCION_CANAL,	FECHA_HORA,		ID_CLIENTE, ID_EMPLEADO,	OBSERVACION)
VALUES							(1,				'PRESENCIAL',		'12-05-2023',	1,			2019008,				'VENTA')
INSERT INTO CANALES_DE_ATENCION	(ID_TIPO_CANAL, DESCRIPCION_CANAL,	FECHA_HORA,		ID_CLIENTE, ID_EMPLEADO,	OBSERVACION)
VALUES							(1,				'PRESENCIAL',		'12-05-2023',	1,			2025005,				'VENTA')
INSERT INTO CANALES_DE_ATENCION	(ID_TIPO_CANAL, DESCRIPCION_CANAL,	FECHA_HORA,		ID_CLIENTE, ID_EMPLEADO,	OBSERVACION)
VALUES							(2,				'INSTAGRAM',		'12-05-2023',	1,			2021002,				'VENTA');


CREATE TABLE ENVIOS(
ID INT IDENTITY(1,1) ,
ID_DIRECCION INT NOT NULL,
NRO_SUCURSAL INT,
FECHA_ESTIMADA_ENTREGA DATETIME,
CONSTRAINT PK_ENVIOS PRIMARY KEY (ID),
CONSTRAINT FK_ENVIOS_DIRECCION FOREIGN KEY (ID_DIRECCION) 
REFERENCES DIRECCIONES(ID),
CONSTRAINT FK_ENVIOS_SUCURSAL FOREIGN KEY (NRO_SUCURSAL) 
REFERENCES SUCURSALES(NRO_SUCURSAL),
);


INSERT INTO ENVIOS	(ID_DIRECCION,	NRO_SUCURSAL,	FECHA_ESTIMADA_ENTREGA)
			VALUES	(1,				1,				'21-05-2025')
INSERT INTO ENVIOS	(ID_DIRECCION,	NRO_SUCURSAL,	FECHA_ESTIMADA_ENTREGA)
			VALUES	(2,				3,				'22-05-2023')
INSERT INTO ENVIOS	(ID_DIRECCION,	NRO_SUCURSAL,	FECHA_ESTIMADA_ENTREGA)
			VALUES	(3,				5,				'23-05-2024')
INSERT INTO ENVIOS	(ID_DIRECCION,	NRO_SUCURSAL,	FECHA_ESTIMADA_ENTREGA)
			VALUES	(4,				7,				'24-05-2023')
INSERT INTO ENVIOS	(ID_DIRECCION,	NRO_SUCURSAL,	FECHA_ESTIMADA_ENTREGA)
			VALUES	(5,				2,				'25-05-2024')
INSERT INTO ENVIOS	(ID_DIRECCION,	NRO_SUCURSAL,	FECHA_ESTIMADA_ENTREGA)
			VALUES	(6,				4,				'26-05-2024')
INSERT INTO ENVIOS	(ID_DIRECCION,	NRO_SUCURSAL,	FECHA_ESTIMADA_ENTREGA)
			VALUES	(7,				6,				'27-04-2019')
INSERT INTO ENVIOS	(ID_DIRECCION,	NRO_SUCURSAL,	FECHA_ESTIMADA_ENTREGA)
			VALUES	(8,				8,				'28-05-2020')
INSERT INTO ENVIOS	(ID_DIRECCION,	NRO_SUCURSAL,	FECHA_ESTIMADA_ENTREGA)
			VALUES	(9,				10,				'28-05-2021')
INSERT INTO ENVIOS	(ID_DIRECCION,	NRO_SUCURSAL,	FECHA_ESTIMADA_ENTREGA)
			VALUES	(10,			9,				'28-12-2022');

			
CREATE TABLE FACTURAS (
CODIGO_FACTURA INT,
FECHA DATETIME,
NRO_CLIENTE INT NOT NULL,
LEGAJO_EMPLEADO INT NOT NULL,
ID_ENVIO INT,
CONSTRAINT PK_FACTURAS PRIMARY KEY (CODIGO_FACTURA),
CONSTRAINT FK_FACTURAS_CLIENTES FOREIGN KEY (NRO_CLIENTE) 
REFERENCES CLIENTES(NRO_CLIENTE),
CONSTRAINT FK_FACTURAS_EMPLEADOS FOREIGN KEY (LEGAJO_EMPLEADO) 
REFERENCES EMPLEADOS(LEGAJO),
CONSTRAINT FK_FACTURAS_ENVIOS FOREIGN KEY (ID_ENVIO) 
REFERENCES ENVIOS(ID),
);


INSERT INTO FACTURAS (CODIGO_FACTURA, FECHA, NRO_CLIENTE, LEGAJO_EMPLEADO, ID_ENVIO)
VALUES (4523, '23-05-2025', 1, 2021002, 1);

INSERT INTO FACTURAS (CODIGO_FACTURA, FECHA, NRO_CLIENTE, LEGAJO_EMPLEADO, ID_ENVIO)
VALUES (7946, '19-03-2025', 2, 2021002, 2);

INSERT INTO FACTURAS (CODIGO_FACTURA, FECHA, NRO_CLIENTE, LEGAJO_EMPLEADO, ID_ENVIO)
VALUES (4613, '29-04-2025', 3, 2025005, 10);

INSERT INTO FACTURAS (CODIGO_FACTURA, FECHA, NRO_CLIENTE, LEGAJO_EMPLEADO, ID_ENVIO)
VALUES (1379, '17-01-2025', 1, 2025005, 4);

INSERT INTO FACTURAS (CODIGO_FACTURA, FECHA, NRO_CLIENTE, LEGAJO_EMPLEADO, ID_ENVIO)
VALUES (7496, '19-01-2025', 2, 2019008, 6); 

INSERT INTO FACTURAS (CODIGO_FACTURA, FECHA, NRO_CLIENTE, LEGAJO_EMPLEADO, ID_ENVIO)
VALUES (1234, '21-04-2025', 7, 2019008, 9);

INSERT INTO FACTURAS (CODIGO_FACTURA, FECHA, NRO_CLIENTE, LEGAJO_EMPLEADO, ID_ENVIO)
VALUES (2345, '14-11-2024', 5, 2019008, 3);

INSERT INTO FACTURAS (CODIGO_FACTURA, FECHA, NRO_CLIENTE, LEGAJO_EMPLEADO, ID_ENVIO)
VALUES (3456, '03-04-2025', 2, 2021002, 5);

INSERT INTO FACTURAS (CODIGO_FACTURA, FECHA, NRO_CLIENTE, LEGAJO_EMPLEADO, ID_ENVIO)
VALUES (4567, '29-04-2025', 2, 2025005, 7);

INSERT INTO FACTURAS (CODIGO_FACTURA, FECHA, NRO_CLIENTE, LEGAJO_EMPLEADO, ID_ENVIO)
VALUES (5678, '16-11-2024', 1, 2019008, 8);


CREATE TABLE DETALLE_FACTURAS (
ID INT IDENTITY(1, 1),
PRECIO DECIMAL,
CANTIDAD INT,
ID_PRODUCTO INT NOT NULL,
CODIGO_FACTURA INT NOT NULL,
DESC_X_CANT INT,
CONSTRAINT PK_DETALLE_FACTURAS PRIMARY KEY (ID),
CONSTRAINT FK_DETALLE_FACTURAS_PRODUCTOS FOREIGN KEY (ID_PRODUCTO) 
REFERENCES PRODUCTOS(ID),
CONSTRAINT FK_DETALLE_FACTURAS_FACTURAS FOREIGN KEY (CODIGO_FACTURA) 
REFERENCES FACTURAS(CODIGO_FACTURA)
);


INSERT INTO DETALLE_FACTURAS	(PRECIO,	CANTIDAD,	ID_PRODUCTO,	CODIGO_FACTURA,		DESC_X_CANT) 
					VALUES		(25000.00,	1, 			10,				4523,				0);
INSERT INTO DETALLE_FACTURAS	(PRECIO,	CANTIDAD,	ID_PRODUCTO,	CODIGO_FACTURA,		DESC_X_CANT) 
					VALUES		(22000.00,	3, 			8,				7946,				20);
INSERT INTO DETALLE_FACTURAS	(PRECIO,	CANTIDAD,	ID_PRODUCTO,	CODIGO_FACTURA,		DESC_X_CANT) 
					VALUES		(60000.00,	1, 			7,				4613,				0);
INSERT INTO DETALLE_FACTURAS	(PRECIO,	CANTIDAD,	ID_PRODUCTO,	CODIGO_FACTURA,		DESC_X_CANT) 
					VALUES		(35000.00,	2, 			9,				1379,				10);
INSERT INTO DETALLE_FACTURAS	(PRECIO,	CANTIDAD,	ID_PRODUCTO,	CODIGO_FACTURA,		DESC_X_CANT) 
					VALUES		(12000.00,	1, 			4,				1379,				0);
INSERT INTO DETALLE_FACTURAS	(PRECIO,	CANTIDAD,	ID_PRODUCTO,	CODIGO_FACTURA,		DESC_X_CANT) 
					VALUES		(30000.00,	1, 			2,				1234,				0);
INSERT INTO DETALLE_FACTURAS	(PRECIO,	CANTIDAD,	ID_PRODUCTO,	CODIGO_FACTURA,		DESC_X_CANT) 
					VALUES		(18000.00,	3, 			4,				2345,				20);
INSERT INTO DETALLE_FACTURAS	(PRECIO,	CANTIDAD,	ID_PRODUCTO,	CODIGO_FACTURA,		DESC_X_CANT) 
					VALUES		(28000.00,	2, 			6,				3456,				10);
INSERT INTO DETALLE_FACTURAS	(PRECIO,	CANTIDAD,	ID_PRODUCTO,	CODIGO_FACTURA,		DESC_X_CANT) 
					VALUES		(10000.00,	6, 			1,				4567,				50);
INSERT INTO DETALLE_FACTURAS	(PRECIO,	CANTIDAD,	ID_PRODUCTO,	CODIGO_FACTURA,		DESC_X_CANT) 
					VALUES		(45000.00,	2, 			3,				5678,				15);

					
CREATE TABLE FACTURA_FORMAS_PAGOS (
ID INT,
ID_FORMA_PAGOS INT NOT NULL,
CODIGO_FACTURA INT NOT NULL,
MONTO_APLICADO DECIMAL NOT NULL,
FECHA_PAGO DATE NOT NULL,
CONSTRAINT PK_FACTURA_FORMAS_PAGOS PRIMARY KEY (ID),
CONSTRAINT FK_FORMA_PAGOS FOREIGN KEY (ID_FORMA_PAGOS)
REFERENCES FORMAS_PAGOS (ID),
CONSTRAINT FK_FACTURAS FOREIGN KEY (CODIGO_FACTURA)
REFERENCES FACTURAS (CODIGO_FACTURA)
);



INSERT INTO FACTURA_FORMAS_PAGOS(ID,	ID_FORMA_PAGOS,		CODIGO_FACTURA,		MONTO_APLICADO,		FECHA_PAGO)
						VALUES	(1,		1,				1379,				125000.00,			'01-11-2023')
INSERT INTO FACTURA_FORMAS_PAGOS(ID,	ID_FORMA_PAGOS,		CODIGO_FACTURA,		MONTO_APLICADO,		FECHA_PAGO)
						VALUES	(2,		1,				2345,				84000.00,			'01-11-2023')
INSERT INTO FACTURA_FORMAS_PAGOS(ID,	ID_FORMA_PAGOS,		CODIGO_FACTURA,		MONTO_APLICADO,		FECHA_PAGO)
						VALUES	(3,		2,				4613,				156000.00,			'01-11-2023')
INSERT INTO FACTURA_FORMAS_PAGOS(ID,	ID_FORMA_PAGOS,		CODIGO_FACTURA,		MONTO_APLICADO,		FECHA_PAGO)
						VALUES	(4,		5,				4567,				95000.00,			'01-11-2023')
INSERT INTO FACTURA_FORMAS_PAGOS(ID,	ID_FORMA_PAGOS,		CODIGO_FACTURA,		MONTO_APLICADO,		FECHA_PAGO)
						VALUES	(5,		10,				1234,				215000.00,			'01-11-2023')
INSERT INTO FACTURA_FORMAS_PAGOS(ID,	ID_FORMA_PAGOS,		CODIGO_FACTURA,		MONTO_APLICADO,		FECHA_PAGO)
						VALUES	(6,		11,				4613,				78000.00,			'01-11-2023')
INSERT INTO FACTURA_FORMAS_PAGOS(ID,	ID_FORMA_PAGOS,		CODIGO_FACTURA,		MONTO_APLICADO,		FECHA_PAGO)
						VALUES	(7,		5,				5678,				112000.00,			'01-11-2023')
INSERT INTO FACTURA_FORMAS_PAGOS(ID,	ID_FORMA_PAGOS,		CODIGO_FACTURA,		MONTO_APLICADO,		FECHA_PAGO)
						VALUES	(8,		5,				7496,				189000.00,			'01-11-2023')
INSERT INTO FACTURA_FORMAS_PAGOS(ID,	ID_FORMA_PAGOS,		CODIGO_FACTURA,		MONTO_APLICADO,		FECHA_PAGO)
						VALUES	(9,		3,				3456,				145000.00,			'01-11-2023')
INSERT INTO FACTURA_FORMAS_PAGOS(ID,	ID_FORMA_PAGOS,		CODIGO_FACTURA,		MONTO_APLICADO,		FECHA_PAGO)
						VALUES	(10,	2,				 7946,				92000.00,			'01-11-2023')
INSERT INTO FACTURA_FORMAS_PAGOS(ID,	ID_FORMA_PAGOS,		CODIGO_FACTURA,		MONTO_APLICADO,		FECHA_PAGO)
						VALUES	(11,	8,				 3456,				16000.00,			'01-11-2023') 
INSERT INTO FACTURA_FORMAS_PAGOS(ID,	ID_FORMA_PAGOS,		CODIGO_FACTURA,		MONTO_APLICADO,		FECHA_PAGO)
						VALUES	(12,	9,				 4567,				50000.00,			'01-11-2023');


CREATE TABLE INSUMOS_PRODUCTOS(
ID INT IDENTITY(1,1),
ID_PRODUCTO INT NOT NULL,
ID_INSUMO INT NOT NULL,
CANT_REQUERIDA DECIMAL(10,2) NOT NULL,
CANT_UTILIZAR DECIMAL(10,2) NOT NULL,
CONSTRAINT PK_INSUMOS_PRODUCTOS PRIMARY KEY (ID),
CONSTRAINT FK_INSUMOS_PRODUCTOS_PRODUCTOS FOREIGN KEY (ID_PRODUCTO) 
REFERENCES PRODUCTOS(ID),
CONSTRAINT FK_INSUMOS_PRODUCTOS_INSUMOS FOREIGN KEY (ID_INSUMO) 
REFERENCES INSUMOS(ID),
);


INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(1,				1,			0.5,				0.5)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(1,				7,			0.1,				0.1)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(1,				9,			0.3,				0.3)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(1,				4,			4,					4)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(2,				1,			2,					2)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(2,				2,			1,					1)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(2,				5,			2,					2)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(2,				6,			1,					1)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(3,				10,			2,					2)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(3,				11,			5,					5)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(3,				12,			1,					1)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(4,				3,			3,					3)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(4,				6,			0.5,				0.5)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(4,				8,			0.5,				0.5)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(5,				1,			0.75,				0.75)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(5,				13,			4,					4)
INSERT INTO INSUMOS_PRODUCTOS	(ID_PRODUCTO,	ID_INSUMO,	CANT_REQUERIDA,		CANT_UTILIZAR)
					VALUES		(5,				9,			0.4,				0.4);

					
CREATE TABLE HOJA_RUTAS (
ID int IDENTITY(1,1) NOT NULL,
ID_CONDUCTOR_VEHICULO int NULL,
FECHA_CREACION DATETIME2 NOT NULL,
FECHA_INICIO DATETIME2 NOT NULL,
FECHA_CIERRE DATETIME2 NOT NULL,
OBSERVACION varchar(300)NULL,
CONSTRAINT PK_HOJA_RUTAS PRIMARY KEY (ID),
CONSTRAINT FK_HOJA_RUTAS_CONDUCTOR_VEHICULO FOREIGN KEY (ID_CONDUCTOR_VEHICULO) 
REFERENCES CONDUCTORES_VEHICULOS(ID)
);


INSERT INTO HOJA_RUTAS(ID_CONDUCTOR_VEHICULO ,FECHA_CREACION ,FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
				VALUES( 1, '2024-11-10 08:30:00.000', '2024-11-15 09:00:00.000', '2024-11-15 17:30:00.000', 'Entrega de paquetes a cliente corporativo')
INSERT INTO HOJA_RUTAS(ID_CONDUCTOR_VEHICULO ,FECHA_CREACION ,FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
				VALUES(2, '2024-11-12 14:15:00.000', '2024-11-16 07:45:00.000', '2024-11-16 15:20:00.000', 'Distribución de productos perecederos')
INSERT INTO HOJA_RUTAS(ID_CONDUCTOR_VEHICULO ,FECHA_CREACION ,FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
				VALUES(3, '2024-11-14 10:00:00.000', '2024-11-17 11:30:00.000', '2024-11-17 14:45:00.000', 'Recolección de documentos importantes')
INSERT INTO HOJA_RUTAS(ID_CONDUCTOR_VEHICULO ,FECHA_CREACION ,FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
				VALUES(4, '2025-01-15 16:20:00.000', '2025-01-18 08:15:00.000', '2025-01-18 12:00:00.000', 'Servicio express para cliente VIP')
INSERT INTO HOJA_RUTAS(ID_CONDUCTOR_VEHICULO ,FECHA_CREACION ,FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
				VALUES( 8, '2025-01-18 09:10:00.000', '2025-01-20 10:00:00.000', '2025-01-20 18:30:00.000', 'Entrega de equipos tecnológicos')
INSERT INTO HOJA_RUTAS(ID_CONDUCTOR_VEHICULO ,FECHA_CREACION ,FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
				VALUES(3, '2025-04-20 13:45:00.000', '2025-04-22 08:30:00.000', '2025-01-20 18:30:00.000', 'Ruta de mantenimiento programada')
INSERT INTO HOJA_RUTAS(ID_CONDUCTOR_VEHICULO ,FECHA_CREACION ,FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
				VALUES(8, '2025-05-22 11:30:00.000', '2025-05-24 07:00:00.000', '2025-05-24 19:15:00.000', 'Distribución regional de mercancía')
INSERT INTO HOJA_RUTAS(ID_CONDUCTOR_VEHICULO ,FECHA_CREACION ,FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
				VALUES(9, '2025-05-21 15:40:00.000', '2025-05-21 09:45:00.000', '2024-11-16 15:20:00.000', 'Entrega internacional urgente')
INSERT INTO HOJA_RUTAS(ID_CONDUCTOR_VEHICULO ,FECHA_CREACION ,FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
				VALUES(7, '2025-04-27 17:00:00.000', '2025-04-30 08:00:00.000', '2025-04-30 16:20:00.000', 'Reparto de última milla')
INSERT INTO HOJA_RUTAS(ID_CONDUCTOR_VEHICULO ,FECHA_CREACION ,FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
				VALUES(5, '2025-04-27 17:00:00.000', '2025-04-30 08:00:00.000', '2025-04-30 16:20:00.000', NULL);
			
INSERT INTO  HOJA_RUTAS(ID_CONDUCTOR_VEHICULO, FECHA_CREACION, FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
VALUES(5, '2024-11-11 09:20:00.000', '2024-11-15 10:00:00.000', '2024-11-15 16:45:00.000',  'Entrega de suministros médicos');
INSERT INTO  HOJA_RUTAS(ID_CONDUCTOR_VEHICULO, FECHA_CREACION, FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
VALUES(6, '2024-11-10 13:10:00.000', '2024-11-14 08:30:00.000', '2024-11-14 18:00:00.000',  'Distribución a supermercados');
INSERT INTO  HOJA_RUTAS(ID_CONDUCTOR_VEHICULO, FECHA_CREACION, FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
VALUES(7, '2025-05-23 11:30:00.000', '2025-05-24 11:30:00.000', '2025-05-24 11:30:00.000',  'Recolección de muestras biológicas');
INSERT INTO  HOJA_RUTAS(ID_CONDUCTOR_VEHICULO, FECHA_CREACION, FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
VALUES(2, '2024-11-14 16:30:00.000', '2024-11-17 09:15:00.000', '2024-11-17 17:45:00.000',  'Entrega de documentos legales');
INSERT INTO  HOJA_RUTAS(ID_CONDUCTOR_VEHICULO, FECHA_CREACION, FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
VALUES(4, '2024-11-12 10:00:00.000', '2024-11-15 11:00:00.000', '2024-11-15 19:00:00.000',  'Servicio express para farmacias');
INSERT INTO  HOJA_RUTAS(ID_CONDUCTOR_VEHICULO, FECHA_CREACION, FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
VALUES(1, '2025-01-12 11:30:00.000', '2025-01-13 11:30:00.000', '2025-01-13 11:30:00.000',  'Distribución de material escolar');
INSERT INTO  HOJA_RUTAS(ID_CONDUCTOR_VEHICULO, FECHA_CREACION, FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
VALUES(3, '2025-05-23 11:30:00.000', '2025-05-23 11:30:00.000', '2025-05-23 11:30:00.000',  'Entrega de repuestos automotrices');
INSERT INTO  HOJA_RUTAS(ID_CONDUCTOR_VEHICULO, FECHA_CREACION, FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
VALUES(8, '2025-05-23 11:30:00.000', '2025-05-23 11:30:00.000', '2025-05-23 11:30:00.000',  'Recolección de equipos electrónicos');
INSERT INTO  HOJA_RUTAS(ID_CONDUCTOR_VEHICULO, FECHA_CREACION, FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
VALUES(9, '2024-11-14 12:10:00.000', '2024-11-17 13:00:00.000', '2024-11-17 17:00:00.000',  'Servicio de mensajería ejecutiva');
INSERT INTO  HOJA_RUTAS(ID_CONDUCTOR_VEHICULO, FECHA_CREACION, FECHA_INICIO, FECHA_CIERRE, OBSERVACION)
VALUES(5, '2024-11-15 17:30:00.000', '2024-11-18 09:45:00.000', '2024-11-18 16:15:00.000', NULL);


CREATE TABLE DETALLES_HOJA_RUTAS (
	ID int IDENTITY(1,1) NOT NULL,
	ID_HOJA_RUTA int NOT NULL,
	ID_ENVIO int NOT NULL,
	TIPO_FRAGIL int NULL,
	ID_ESTADO_ENTREGA int NOT NULL,
	OBSERVACION varchar(300) NULL,
	CONSTRAINT PK_DETALLES_HOJAS_RUTAS PRIMARY KEY (ID),
	CONSTRAINT FK_DETALLES_HOJAS_RUTAS_ENVIO FOREIGN KEY (ID_ENVIO) 
	REFERENCES ENVIOS(ID),
	CONSTRAINT FK_DETALLES_HOJAS_RUTAS_ESTADO_ENTREGAS FOREIGN KEY (ID_ESTADO_ENTREGA) 
	REFERENCES ESTADOS_ENTREGAS(ID),
	CONSTRAINT FK_DETALLES_HOJAS_RUTAS_RUTAS FOREIGN KEY (ID_HOJA_RUTA) 
	REFERENCES HOJA_RUTAS(ID),
	CONSTRAINT FK_DETALLES_HOJAS_RUTAS_TIPOS_FRAGILIDAD FOREIGN KEY (TIPO_FRAGIL) 
	REFERENCES TIPOS_FRAGILIDAD(ID)
);

INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA,	ID_ENVIO,	TIPO_FRAGIL,	ID_ESTADO_ENTREGA,	OBSERVACION) 
						VALUES (1,				1,			1,				2,					NULL)					
INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA,	ID_ENVIO,	TIPO_FRAGIL,	ID_ESTADO_ENTREGA,	OBSERVACION) 
						VALUES (2,				2,			11,				1,					'CONTROLAR SI EL CLIENTE SE ENCUENTRA')
INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA,	ID_ENVIO,	TIPO_FRAGIL,	ID_ESTADO_ENTREGA,	OBSERVACION) 
						VALUES (3,				3,			6,				3,					'PRODUCTO NO FRAGIL')
INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA,	ID_ENVIO,	TIPO_FRAGIL,	ID_ESTADO_ENTREGA,	OBSERVACION) 
						VALUES (2,				4,			1,				1,					'DEJAR A GUSTAVO')
INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA,	ID_ENVIO,	TIPO_FRAGIL,	ID_ESTADO_ENTREGA,	OBSERVACION) 
						VALUES (3,				5,			6,				2,					NULL)
INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA,	ID_ENVIO,	TIPO_FRAGIL,	ID_ESTADO_ENTREGA,	OBSERVACION) 
						VALUES (4,				6,			1,				3,					NULL)
INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA,	ID_ENVIO,	TIPO_FRAGIL,	ID_ESTADO_ENTREGA,	OBSERVACION) 
						VALUES (4,				7,			11,				2,					NULL)
INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA,	ID_ENVIO,	TIPO_FRAGIL,	ID_ESTADO_ENTREGA,	OBSERVACION) 
						VALUES (5,				8,			11,				1,					NULL)
INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA,	ID_ENVIO,	TIPO_FRAGIL,	ID_ESTADO_ENTREGA,	OBSERVACION) 
						VALUES (2,				9,			1,				2,					NULL)
INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA,	ID_ENVIO,	TIPO_FRAGIL,	ID_ESTADO_ENTREGA,	OBSERVACION) 
						VALUES (1,				10,			11,				2,					NULL)


INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA, ID_ENVIO, TIPO_FRAGIL, ID_ESTADO_ENTREGA, OBSERVACION) 
VALUES (1, 1, 6, 2, 'Paquetes con componentes electrónicos frágiles');

INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA, ID_ENVIO, TIPO_FRAGIL, ID_ESTADO_ENTREGA, OBSERVACION) 
VALUES (1, 2, 1, 2, 'Documentación confidencial - entregar en recepción');


INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA, ID_ENVIO, TIPO_FRAGIL, ID_ESTADO_ENTREGA, OBSERVACION) 
VALUES (2, 3, 1, 1, 'Productos refrigerados - mantener cadena de frío');

INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA, ID_ENVIO, TIPO_FRAGIL, ID_ESTADO_ENTREGA, OBSERVACION) 
VALUES (2, 4, 11, 1, 'Entregar antes de las 12:00 hs');


INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA, ID_ENVIO, TIPO_FRAGIL, ID_ESTADO_ENTREGA, OBSERVACION) 
VALUES (3, 5, 6, 3, 'Carpetas legales - ya recolectadas');

INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA, ID_ENVIO, TIPO_FRAGIL, ID_ESTADO_ENTREGA, OBSERVACION) 
VALUES (3, 6, 6, 3, 'Documentos contables');


INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA, ID_ENVIO, TIPO_FRAGIL, ID_ESTADO_ENTREGA, OBSERVACION) 
VALUES (4, 7, 1, 2, 'Reloj de alta gama - valor declarado $15,000');

INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA, ID_ENVIO, TIPO_FRAGIL, ID_ESTADO_ENTREGA, OBSERVACION) 
VALUES (4, 8, 1, 2, 'Joyeria - requerirá firma de recepción');


INSERT INTO DETALLES_HOJA_RUTAS(ID_HOJA_RUTA, ID_ENVIO, TIPO_FRAGIL, ID_ESTADO_ENTREGA, OBSERVACION) 
VALUES (5, 9, 11, 1, 'Servidores - manejar con extremo cuidado');


CREATE TABLE REMITOS(
ID INT IDENTITY(1,1),
NRO_REMITO INT NOT NULL,
ID_DETALLE_RUTA INT NOT NULL,
FECHA datetime,
CONSTRAINT PK_REMITOS PRIMARY KEY (ID),
CONSTRAINT FK_REMITOS_DETALLES_HOJA_RUTAS FOREIGN KEY (ID_DETALLE_RUTA) 
REFERENCES DETALLES_HOJA_RUTAS (ID)
);


INSERT INTO REMITOS	(NRO_REMITO,	ID_DETALLE_RUTA,	FECHA) 
			VALUES	(1001,			1,					'15-12-2023');
INSERT INTO REMITOS	(NRO_REMITO,	ID_DETALLE_RUTA,	FECHA) 
			VALUES	(1002,			2,					'28-01-2024');
INSERT INTO REMITOS	(NRO_REMITO,	ID_DETALLE_RUTA,	FECHA) 
			VALUES	(1003,			3,					'10-03-2024');
INSERT INTO REMITOS	(NRO_REMITO,	ID_DETALLE_RUTA,	FECHA) 
			VALUES	(1004,			4,					'22-04-2024');
INSERT INTO REMITOS	(NRO_REMITO,	ID_DETALLE_RUTA,	FECHA) 
			VALUES	(1005,			5,					'30-06-2024');
INSERT INTO REMITOS	(NRO_REMITO,	ID_DETALLE_RUTA,	FECHA) 
			VALUES	(1006,			6,					'14-08-2024');
INSERT INTO REMITOS	(NRO_REMITO,	ID_DETALLE_RUTA,	FECHA) 
			VALUES	(1007,			7,					'05-11-2024');
INSERT INTO REMITOS	(NRO_REMITO,	ID_DETALLE_RUTA,	FECHA) 
			VALUES	(1008,			8,					'19-01-2025');
INSERT INTO REMITOS	(NRO_REMITO,	ID_DETALLE_RUTA,	FECHA) 
			VALUES	(1009,			9,					'03-03-2025');
INSERT INTO REMITOS	(NRO_REMITO,	ID_DETALLE_RUTA,	FECHA) 
			VALUES	(1010,			10,					'20-05-2025');

			
CREATE TABLE DETALLES_REMITOS(
ID INT IDENTITY(1,1),
ID_REMITO INT NOT NULL,
ID_PRODUCTO INT NOT NULL,
DESCRIPCION VARCHAR(100),
CANTIDAD INT
CONSTRAINT PK_DETALLES_REMITOS PRIMARY KEY (ID),
CONSTRAINT FK_DETALLES_REMITOS_PRODUCTOS FOREIGN KEY (ID_PRODUCTO) 
REFERENCES PRODUCTOS (ID),
CONSTRAINT FK_DETALLES_REMITOS_REMITOS FOREIGN KEY (ID_REMITO) 
REFERENCES REMITOS (ID),
)



INSERT INTO DETALLES_REMITOS(ID_REMITO,		ID_PRODUCTO,	DESCRIPCION,					CANTIDAD)
					VALUES	(1,			5,				'Mesa Ratona',					2)
INSERT INTO DETALLES_REMITOS(ID_REMITO,		ID_PRODUCTO,	DESCRIPCION,					CANTIDAD)
					VALUES	(2,			1,				'Silla de Comedor',				34)
INSERT INTO DETALLES_REMITOS(ID_REMITO,		ID_PRODUCTO,	DESCRIPCION,					CANTIDAD)
					VALUES	(3,			10,				 'Silla Oficina Ergonómica',	12)
INSERT INTO DETALLES_REMITOS(ID_REMITO,		ID_PRODUCTO,	DESCRIPCION,					CANTIDAD)
					VALUES	(4,			2,				'Mesa Extensible',				1)
INSERT INTO DETALLES_REMITOS(ID_REMITO,		ID_PRODUCTO,	DESCRIPCION,					CANTIDAD)
					VALUES	(5,			4,				'Estantería Modular',			10)
INSERT INTO DETALLES_REMITOS(ID_REMITO,		ID_PRODUCTO,	DESCRIPCION,					CANTIDAD)
					VALUES	(6,			6,				'Cómoda de 6 cajones',			14)
INSERT INTO DETALLES_REMITOS(ID_REMITO,		ID_PRODUCTO,	DESCRIPCION,					CANTIDAD)
					VALUES	(7,			7,				'Cama Matrimonial',				20)
INSERT INTO DETALLES_REMITOS(ID_REMITO,		ID_PRODUCTO,	DESCRIPCION,					CANTIDAD)
					VALUES	(8,			8,				'Biblioteca Alta',				15)
INSERT INTO DETALLES_REMITOS(ID_REMITO,		ID_PRODUCTO,	DESCRIPCION,					CANTIDAD)
					VALUES	(9,			9,				'Escritorio Ejecutivo',			54)
INSERT INTO DETALLES_REMITOS(ID_REMITO,		ID_PRODUCTO,	DESCRIPCION,					CANTIDAD)
					VALUES	(10,			3,				'Sillón 2 cuerpos',				4) 


CREATE TABLE MOTIVOS_DEVOLUCION(
CODIGO VARCHAR(50),
DESCRIPCION VARCHAR(100),
CONSTRAINT PK_MOTIVOS_DEVOLUCION PRIMARY KEY (CODIGO)
)


INSERT INTO MOTIVOS_DEVOLUCION(CODIGO, DESCRIPCION)
VALUES ('D01', 'Producto dañado o defectuoso')
INSERT INTO MOTIVOS_DEVOLUCION(CODIGO, DESCRIPCION)
VALUES ('D02', 'Producto no coincide con la descripción')
INSERT INTO MOTIVOS_DEVOLUCION(CODIGO, DESCRIPCION)
VALUES ('D03', 'Producto incorrecto enviado')
INSERT INTO MOTIVOS_DEVOLUCION(CODIGO, DESCRIPCION)
VALUES ('D04', 'Tamaño incorrecto')
INSERT INTO MOTIVOS_DEVOLUCION(CODIGO, DESCRIPCION)
VALUES ('D05', 'Color incorrecto')
INSERT INTO MOTIVOS_DEVOLUCION(CODIGO, DESCRIPCION)
VALUES ('D06', 'Arrepentimiento de compra')
INSERT INTO MOTIVOS_DEVOLUCION(CODIGO, DESCRIPCION)
VALUES ( 'D07', 'Plazo de devolución')
INSERT INTO MOTIVOS_DEVOLUCION(CODIGO, DESCRIPCION)
VALUES ( 'D08', 'Falta de piezas o accesorios')
INSERT INTO MOTIVOS_DEVOLUCION(CODIGO, DESCRIPCION)
VALUES ('D09', 'Problemas de calidad')
INSERT INTO MOTIVOS_DEVOLUCION(CODIGO, DESCRIPCION)
VALUES ( 'D10', 'Cambio de opinión');


CREATE TABLE DEVOLUCIONES(
ID INT IDENTITY(1,1),
ID_DETALLE_REMITO INT NOT NULL,
CANT_DEVOLUCION INT NOT NULL,
MOTIVO VARCHAR(50),
FECHA DATETIME,
OBSERVACION VARCHAR(250),
CONSTRAINT PK_DEVOLUCIONES PRIMARY KEY (ID),
CONSTRAINT FK_DEVOLUCIONES_DETALLE_REMITO FOREIGN KEY (ID_DETALLE_REMITO) 
REFERENCES DETALLES_REMITOS (ID),
CONSTRAINT FK_DEVOLUCIONES_MOTIVOS_DEVOLUCIONES FOREIGN KEY(MOTIVO)
REFERENCES MOTIVOS_DEVOLUCION(CODIGO)
);


INSERT INTO DEVOLUCIONES	(ID_DETALLE_REMITO, CANT_DEVOLUCION,	MOTIVO, FECHA,			OBSERVACION)
				VALUES		(1,					1,					'D01',	'15-12-2023',	'Mesa con rajadura en el tablero')
INSERT INTO DEVOLUCIONES	(ID_DETALLE_REMITO, CANT_DEVOLUCION,	MOTIVO, FECHA,			OBSERVACION)
				VALUES		(2,					2,					'D03',	'28-01-2024',	'Enviaron sillas modelo equivocado')
INSERT INTO DEVOLUCIONES	(ID_DETALLE_REMITO, CANT_DEVOLUCION,	MOTIVO, FECHA,			OBSERVACION)
				VALUES		(3,					1,					'D09',	'10-03-2024',	'Mecanismo giratorio defectuoso')
INSERT INTO DEVOLUCIONES	(ID_DETALLE_REMITO, CANT_DEVOLUCION,	MOTIVO, FECHA,			OBSERVACION)
				VALUES		(4,					1,					'D02',	'22-04-2024',	'Mesa no es extensible como en la descripción')
INSERT INTO DEVOLUCIONES	(ID_DETALLE_REMITO, CANT_DEVOLUCION,	MOTIVO, FECHA,			OBSERVACION)
				VALUES		(5,					3,					'D05',	'30-06-2024',	'Color melamina no coincide con el pedido')
INSERT INTO DEVOLUCIONES	(ID_DETALLE_REMITO, CANT_DEVOLUCION,	MOTIVO, FECHA,			OBSERVACION)
				VALUES		(6,					1,					'D08',	'14-08-2024',	'Faltan tiradores para los cajones')
INSERT INTO DEVOLUCIONES	(ID_DETALLE_REMITO, CANT_DEVOLUCION,	MOTIVO, FECHA,			OBSERVACION)
				VALUES		(7,					1,					'D04',	'05-11-2024',	'Medidas no corresponden a lo solicitado')
INSERT INTO DEVOLUCIONES	(ID_DETALLE_REMITO, CANT_DEVOLUCION,	MOTIVO, FECHA,			OBSERVACION)
				VALUES		(8,					2,					'D06',	'19-01-2025',	'Cliente se arrepintió de la compra')


--412110 - Facundo Balls:
--Consulta 1:
--Se pide mostrar la fecha estimada de entrega junto a la dirección(en la misma columna), el barrio y provincia de los envíos realizados
--en los ultimos 3 años atrás. De estos envíos se pide mostrar solo los que contengan 'A' en el nombre de la calle y sean de la provincia
--'CORDOBA', 'LA RIOJA' o 'BUENOS AIRES'

SELECT e.FECHA_ESTIMADA_ENTREGA, CONCAT(d.CALLE, ' ',d.NUMERO) 'DIRECCION', b.BARRIO, p.PROVINCIA  
FROM ENVIOS e, DIRECCIONES d, BARRIOS b, PROVINCIAS p
WHERE e.ID_DIRECCION = d.ID
AND b.ID = d.ID_BARRIO
AND p.ID = b.ID_PROVINCIA
AND DATEDIFF(YEAR,FECHA_ESTIMADA_ENTREGA, GETDATE()) < 3
AND d.CALLE like '%A%'
AND p.PROVINCIA IN ('CÓRDOBA','LA RIOJA', 'BUENOS AIRES')

--Consulta 2:
--Mostrar el detalle de las facturas de los años 2023 y 2024, listando el nombre y apellido del empleado (en una sola columna)
--cuyo rol finalice con las letras 'RO' o sea 'ASESOR COMERCIAL' y el puesto dentro de la empresa, se pide listar el nombre y
--descripcion del articulo junto a la fecha de la factura, precio, cantidad y monto total de la compra. De los detalles se pide 
--filtrar aquellos que el monto total pedido sea mayor al promedio de los productos.

SELECT CONCAT(e.NOMBRE, ' ',e.APELLIDO) 'FULL NAME',  r.ROL, pu.PUESTOS, p.NOMBRE, p.DESCRIPCION, 
	   f.FECHA, df.PRECIO, df.CANTIDAD, (df.PRECIO * df.CANTIDAD) 'MONTO TOTAL'
FROM DETALLE_FACTURAS df, PRODUCTOS p, FACTURAS f, EMPLEADOS e, ROLES r, PUESTOS pu
WHERE df.CODIGO_FACTURA = f.CODIGO_FACTURA 
AND df.ID_PRODUCTO = p.ID
AND f.LEGAJO_EMPLEADO = e.LEGAJO
AND e.ID_ROL = r.ID
AND r.ID_PUESTO = pu.ID
and YEAR(f.FECHA) in (2023,2024)
AND (r.ROL LIKE '%RO' OR r.rol = 'ASESOR COMERCIAL')
and df.PRECIO * df.CANTIDAD > (select avg(PRECIO)
				from DETALLE_FACTURAS)
				


--421613 - Nolis Maldonado   -  Consulta 1
--Descripción de la consulta: Esta consulta recupera información detallada de productos que cumplen con criterios específicos relacionados
--a su categoría, subcategoría y precio. Para cada producto listado, se muestran su nombre, descripción, precio unitario, 
--la categoría a la que pertenece y su subcategoría.

SELECT 
    p.NOMBRE AS Nombre_Producto,
    p.DESCRIPCION AS Descripcion,
    p.PRECIO_UNITARIO,
    c.NOMBRE AS Categoria,
    sc.DESCRIPCION_SUB_CATEGORIA AS Subcategoria
FROM PRODUCTOS p
JOIN CATEGORIAS c ON p.ID_CATEGORIA = c.ID
JOIN SUB_CATEGORIAS sc ON c.ID_SUB_CATEGORIA = sc.ID
WHERE sc.DESCRIPCION_SUB_CATEGORIA IN ('MUEBLES DE COMEDOR', 'MUEBLES DE DORMITORIO')
  AND p.PRECIO_UNITARIO BETWEEN 10000 AND 50000
  AND c.NOMBRE <> 'SILLAS DE COMEDOR';

--Consulta 2
--Descripción de la consulta: Esta consulta tiene como objetivo mostrar el stock actual de determinados productos en cada sucursal,
--incluyendo información adicional como la dirección y el barrio correspondiente. Específicamente, la consulta selecciona los productos
--cuyo nombre contiene las palabras "SILL" o "MES", utilizando el operador LIKE con comodines (%), lo cual constituye un test de patrón
--de búsqueda. Además, se excluyen las sucursales con los números 3, 5 y 7, aplicando un filtro con NOT IN, que es un test de conjunto. 
--También se utiliza una función incorporada (YEAR(GETDATE())) para obtener y mostrar el año actual como una columna adicional.

	SELECT 
	P.NOMBRE AS PRODUCTO,
	S.NRO_SUCURSAL,
    	D.CALLE + ' ' + CAST(D.NUMERO AS VARCHAR) AS DIRECCION_SUCURSAL,
	B.BARRIO AS BARRIO,
	(ST.CANTIDAD_INICIAL + ST.VARIACION_STOCK) AS UNIDADES_EN_STOCK,
	YEAR(GETDATE()) AS AÑO_ACTUAL
FROM STOCKS ST
JOIN PRODUCTOS P 
    ON ST.ID_PRODUCTO = P.ID
JOIN SUCURSALES S 
    ON ST.ID_SUCURSAL = S.NRO_SUCURSAL
JOIN DIRECCIONES D
    ON S.ID_DIRECCIONES = D.ID
jOIN BARRIOS B
	ON B.ID = D.ID_BARRIO
WHERE P.NOMBRE LIKE '%SILL%' OR P.NOMBRE LIKE '%MES%'
AND ST.ID_SUCURSAL NOT IN (3, 5, 7)
ORDER BY S.NRO_SUCURSAL;


--421263 - Cintia Cariddi - Consulta 1
--Descripción de la consulta: La consulta deberá enlistar el código de la factura, el número de cliente, el producto, su origen 
--y la fecha,  de aquellas facturas que se realizaron para los productos de origen nacional durante el periodo de diciembre de 2024 
--y julio de 2025 ordenado por la fecha.

SELECT F.CODIGO_FACTURA, F.NRO_CLIENTE, F.FECHA, P.NOMBRE 'PRODUCTO', OP.NOMBRE 'ORIGEN'
FROM FACTURAS F 
JOIN DETALLE_FACTURAS DF 
ON F.CODIGO_FACTURA = DF.CODIGO_FACTURA 
JOIN PRODUCTOS P ON DF.ID_PRODUCTO = P.ID 
JOIN ORIGEN_PRODUCTOS OP ON P.ID_ORIGEN = OP.ID 
WHERE OP.NOMBRE = 'NACIONAL' 
AND CONVERT(date,F.FECHA ) BETWEEN '2024-12-01' AND '2025-07-31'

--421263 - Cintia Cariddi - Consulta 2
--Descripción de la consulta: La consulta deberá mostrar la cantidad devuelta, la observación, el motivo, el producto y la fecha
--de aquellas devoluciones que el motivo contenga la palabra "rotura" y no tenga la palabra defectuoso (sin importar mayúsculas y minúsculas),
--que tenga observación o que su cantidad sea menor a 10.

SELECT D.CANT_DEVOLUCION, D.OBSERVACION, MD.DESCRIPCION as MOTIVO, D.FECHA, P.NOMBRE as PRODUCTO
	FROM DEVOLUCIONES D
	JOIN MOTIVOS_DEVOLUCION MD ON MD.CODIGO = D.MOTIVO
JOIN DETALLES_REMITOS DR ON DR.ID = D.ID_DETALLE_REMITO
JOIN PRODUCTOS P ON P.ID = DR.ID_PRODUCTO
	WHERE (LOWER(D.OBSERVACION) LIKE '%rotura%' 
OR LOWER(D.OBSERVACION) NOT LIKE '%defectuoso%')
		AND ((D.OBSERVACION IS NOT NULL AND D.OBSERVACION != '')
		OR D.CANT_DEVOLUCION < 10);


--Matias Duarte Consulta 1:
--Descripción: Indicar cuales son los 5 galpones con mayor capacidad, ordenados de mayor a menor, y saber a qué sucursal pertenecen,
--dirección, barrio, provincia y si se encuentran habilitados.

SELECT TOP 5
    s.NRO_SUCURSAL,
    b.BARRIO,
    p.PROVINCIA,
    g.HABILITADO,
    g.CAPACIDAD
FROM GALPONES g
INNER JOIN SUCURSALES s ON s.ID_NRO_GALPON = g.NRO_GALPON
INNER JOIN DIRECCIONES d ON s.ID_DIRECCIONES = d.ID
INNER JOIN BARRIOS b ON d.ID_BARRIO = b.ID
INNER JOIN PROVINCIAS p ON b.ID_PROVINCIA = p.ID
ORDER BY g.CAPACIDAD DESC;

--Matias Duarte Consulta 2: 

--Descripción: Indicar los productos con precio unitario mayor a 5000, ordenados de menor a mayor, que su origen sea nacional e
--indicar su categoría.

SELECT 
    p.NOMBRE AS Producto,
    p.PRECIO_UNITARIO AS PrecioUnitario,
    c.NOMBRE AS Categoria,
    op.NOMBRE AS Origen
FROM PRODUCTOS p
INNER JOIN CATEGORIAS c ON p.ID_CATEGORIA = c.ID
INNER JOIN ORIGEN_PRODUCTOS op ON p.ID_ORIGEN = op.ID
WHERE 
    p.PRECIO_UNITARIO > 5000
    AND op.NOMBRE = 'Nacional'
ORDER BY p.PRECIO_UNITARIO ASC;

--421261 - Lucas Padula Consulta 1:
--Descripción: Muestra un listado de conductores con sus vehículos asignados y las rutas programadas para los últimos
--5 meses, incluyendo datos clave como la empresa logística responsable, identificar las hojas de ruta y observaciones de cada servicio.

select 
	c.NOMBRE +space(2)+ c.APELLIDO as NOMBRE_COMPLETO,
	v.MARCA +space(2)+'| PATENTE:'+ space(2)+ v.PATENTE AS MARCA_PATENTE,
	el.RAZON_SOCIAL as EMPRESA,
	'HR-' + CONVERT(VARCHAR(20), hr.ID) as NUMERO_HOJA_RUTA,
	format(hr.FECHA_CREACION, 'yyyy/MM/dd') as FECHA_CREACION,
	hr.OBSERVACION
from HOJA_RUTAS hr 
join  CONDUCTORES_VEHICULOS cv on hr.ID_CONDUCTOR_VEHICULO = cv.id 
join  CONDUCTORES c on c.id = cv.ID_CONDUCTOR
join  VEHICULOS v on v.id = cv.ID_VEHICULO
join  EMPRESAS_LOGISTICAS el on el.CUIT = c.CUIT_EMPRESA_LOGISTICA
WHERE hr.FECHA_CIERRE >= dateadd(month, -6,GETDATE())
and v.MARCA in ('IVECO', 'FIAT', 'PEUGEOT')
AND hr.observacion is not null

--421261 - Lucas Padula Consulta 2:
--Descripción: Muestra un listado del detalle de las hojas de rutas con tipo de fragilidad y el estado de la entrega en donde 
--se busque por la palabra inical de (P y C) para la fecha 2021-05-01 al 2025-05-31, incluyendo datos clave como
--la descrípcion y la fecha estimada de entrega de cada hoja de ruta

select 
	'HR-' + CONVERT(VARCHAR(20), hr.ID) as NUMERO_HOJA_RUTA,
	format(e.FECHA_ESTIMADA_ENTREGA, 'MMMM yyyy') as FECHA_ESTIMADA_ENTREGA,
	tf.TIPO_FRAGIL,
	ee.ESTADO_ENTREGA,
	dr.DESCRIPCION,
	dr.CANTIDAD
from HOJA_RUTAS hr
right join detalles_hoja_rutas dhr on dhr.id_hoja_ruta = hr.id
join envios e on e.id = dhr.id_envio
join tipos_fragilidad tf on tf.id = dhr.tipo_fragil
join estados_entregas ee on ee.id = dhr.id_estado_entrega
join remitos r on r.ID_DETALLE_RUTA = dhr.id
join detalles_remitos dr on dr.id_remito = r.id
where ee.estado_entrega like '[PC]%' 
and CONVERT(date,e.FECHA_ESTIMADA_ENTREGA) between  '2021-05-01' and '2025-05-31'


--412661 Bini Toledo Micaela consulta 1
--DESCRIPCION: Obtener los canales de atención en los que intervinieron empleados que residen en provincias que comienzan 
--con la letra C o B, y donde los clientes atendidos no viven en barrios que contengan la palabra NUEVA.
--Mostrar el tipo y la descripción del canal, el nombre completo del empleado y la provincia.

SELECT  tc.TIPO_CANAL, ca.DESCRIPCION_CANAL, e.NOMBRE + ' ' + e.APELLIDO AS EMPLEADO, p.PROVINCIA
FROM CANALES_DE_ATENCION ca
JOIN TIPOS_CANALES tc ON ca.ID_TIPO_CANAL = tc.ID
JOIN EMPLEADOS e ON ca.ID_EMPLEADO = e.LEGAJO
JOIN DIRECCIONES de ON e.ID_DIRECCION = de.ID
JOIN BARRIOS be ON de.ID_BARRIO = be.ID
JOIN PROVINCIAS p ON be.ID_PROVINCIA = p.ID
JOIN CLIENTES c ON ca.ID_CLIENTE = c.NRO_CLIENTE
JOIN DIRECCIONES dc ON c.ID_DIRECCION = dc.ID
JOIN BARRIOS bc ON dc.ID_BARRIO = bc.ID
WHERE 
    (p.PROVINCIA LIKE 'C%' OR p.PROVINCIA LIKE 'B%' OR p.PROVINCIA IS NULL)
    AND (bc.BARRIO NOT LIKE '%NUEVA%' OR bc.BARRIO IS NULL)

	
--412661 Bini Toledo Micaela consulta 2
--Descripcion: Mostrar por tipo de documento y mes de factura, la cantidad de clientes distintos que realizaron al menos una factura,
--la cantidad total de facturas y la fecha de la última factura. Se consideran solo los clientes con tipo de documento 
--DNI o Pasaporte y facturas emitidas durante todo el año (meses del 1 al 12).

SELECT 
    td.DESCRIPCION AS TipoDocumento,
    COUNT(DISTINCT c.NRO_CLIENTE) AS CantidadClientes,
    MONTH(f.FECHA) AS MesFactura,
    COUNT(f.CODIGO_FACTURA) AS CantidadFacturas,
    MAX(f.FECHA) AS UltimaFactura
FROM CLIENTES c
JOIN TIPOS_DOCUMENTOS td ON c.TIPO_DOC = td.ID
JOIN FACTURAS f ON f.NRO_CLIENTE = c.NRO_CLIENTE
WHERE MONTH(f.FECHA) BETWEEN 1 AND 12
  AND td.CODIGO IN ('DNI', 'PAS')
GROUP BY td.DESCRIPCION, MONTH(f.FECHA)
ORDER BY td.DESCRIPCION, MesFactura;



--Matias Glowacki -- Legajo 421467-- Consulta N°1 
--DESCRIPCION: Mostrar el nombre y apellido del cliente, el codigo, precio y  fecha de las facturas de las ventas realizadas 
--en 2025 cuyo precio sea mayor a $10.000 y el apellido del cliente contenga la letra 'R'. 
 
SELECT C.NOMBRE, C.APELLIDO, DF.CODIGO_FACTURA, DF.PRECIO,     F.FECHA                                                                                                                 
FROM FACTURAS F                                                                                                                                        
JOIN CLIENTES C ON F.NRO_CLIENTE = C.NRO_CLIENTE                                                               
JOIN DETALLE_FACTURAS DF ON F.CODIGO_FACTURA = DF.CODIGO_FACTURA 
WHERE YEAR(F.FECHA) =2025    AND DF.PRECIO > 10000 AND C.APELLIDO LIKE '%R%' 

--Matias Glowacki -- Legajo 421467-- Consulta N°2 
--Mostrar el número de sucursal donde se realizó la venta, la fecha de entrega, el estado de la entrega,
--la fragilidad del producto enviado y las observaciones de los envíos realizados entre 2023 y 2024 los cuales
--fueron entregados o se encuentran pendientes (entregado = 1, pendiente = 2) y sus observaciones no son nulas. 

SELECT E.NRO_SUCURSAL, E.FECHA_ESTIMADA_ENTREGA, D.ID_ESTADO_ENTREGA, D.TIPO_FRAGIL, HR.OBSERVACION                                                                                                         
FROM ENVIOS E 
JOIN DETALLES_HOJA_RUTAS D ON E.NRO_SUCURSAL = D.ID_ENVIO 
JOIN HOJA_RUTAS HR ON D.ID_HOJA_RUTA = HR.ID 
WHERE convert(date,E.FECHA_ESTIMADA_ENTREGA) BETWEEN '2023-01-01' 
AND '2024-12-31' AND D.ID_ESTADO_ENTREGA IN (1, 2) 
AND HR.OBSERVACION IS NOT NULL




